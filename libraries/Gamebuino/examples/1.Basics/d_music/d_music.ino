#include <SPI.h>
#include <Gamebuino.h>
Gamebuino gb;


PROGMEM uint16_t tetris_main1[] = {
  0x708E, 0x5C4E, 0x604E, 0x684E, 0x702E, 0x682E, 0x604E, 0x5C4E, 0x547E, 0x5418, 0x544E, 0x604E, 0x708E, 0x684E, 0x604E, 0x5CCE, 0x604E, 0x688E, 0x708E, 0x608E, 0x547E, 0x5414, 0x550E, 0x40, 0x688E, 0x744E, 0x848E, 0x7C4E, 0x744E, 0x70CE, 0x604E, 0x708E, 0x684E, 0x604E, 0x5C7E, 0x10, 0x5C4E, 0x604E, 0x688E, 0x708E, 0x608E, 0x547E, 0x1014, 0x548E, 0x541C, 0x541A, 0x5418, 0x5416, 0x5414, 0x5412, 0x20, 0x410E, 0x310E, 0x390E, 0x2D0E, 0x310E, 0x250E, 0x20FE, 0x2018, 0x2C8E, 0x2C1C, 0x2C1A, 0x2C18, 0x2C16, 0x2C14, 0x2C12, 0x20, 0x410E, 0x310E, 0x390E, 0x2D0E, 0x307E, 0x301E, 0x407E, 0x401E, 0x550E, 0x510E, 0x502C, 0x502A, 0x5028, 0x5026, 0x5024, 0x5022, 0x5040, 0x0000};
PROGMEM uint16_t tetris_main2[] = {
  0x5C8E, 0x504E, 0x544E, 0x5C8E, 0x544E, 0x504E, 0x407E, 0x4018, 0x404E, 0x544E, 0x608E, 0x5C4E, 0x544E, 0x504E, 0x404E, 0x504E, 0x544E, 0x5C8E, 0x608E, 0x548E, 0x407E, 0x4014, 0x410E, 0x40, 0x448E, 0x544E, 0x603E, 0x10, 0x601E, 0x10, 0x601E, 0x10, 0x5C4E, 0x544E, 0x30CE, 0x104E, 0x304E, 0x542E, 0x302E, 0x144E, 0x104E, 0x504E, 0x104E, 0x504E, 0x544E, 0x5C4E, 0x504E, 0x604E, 0x504E, 0x544E, 0x104E, 0x107E, 0x1014, 0x108E, 0x101C, 0x101A, 0x1018, 0x1016, 0x1014, 0x1012, 0x20, 0x30FE, 0x3014, 0x250E, 0x2CFE, 0x2C14, 0x210E, 0x24FE, 0x2414, 0x10FE, 0x1014, 0x110E, 0x208E, 0x201C, 0x201A, 0x2018, 0x2016, 0x2014, 0x2012, 0x20, 0x310E, 0x250E, 0x2CFE, 0x2C1E, 0x210E, 0x248E, 0x308E, 0x410E, 0x390E, 0x382C, 0x382A, 0x3828, 0x3826, 0x3824, 0x3822, 0x3840, 0x0000};
PROGMEM uint16_t tetris_drum[] = {
  0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x2C4E,0x304E,0x384E,0x40,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0x60,0x702F,0xE0,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x504E,0x104E,0x504E,0x104E,0x504E,0x104E,0x504E,0x104E,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x504E,0x104E,0x504E,0x104E,0x100,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x504E,0x104E,0x504E,0x104E,0x504E,0x104E,0x504E,0x104E,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x544E,0x104E,0x204E,0x104E,0x204E,0x104E,0x100,0x0000};

PROGMEM uint16_t arpegio[] = {
  0x4E,0x84E,0x104E,0x144E,0x1C4E,0x244E,0x2C4E,0x304E,0x384E,0x404E,0x444E,0x4C4E,0x544E,0x5C4E,0x604E,0x684E,0x704E,0x744E,0x7C4E,0x844E,0x8C4E,0x0000};



///////////////////////////////////// SETUP
void setup() {
  gb.begin(F("Music"));

  gb.sound.play(tetris_main1, 0);
  gb.sound.play(tetris_main2, 1);
  gb.sound.play(tetris_drum, 2);
  gb.sound.setLooping(0, true);
  gb.sound.setLooping(1, true);
  gb.sound.setLooping(2, true);
}

void loop(){
  if(gb.update()){
    if(gb.buttons.pressed(BTN_A)){
      gb.sound.stop();
      gb.sound.play(arpegio, 0);
      gb.sound.play(arpegio, 1);
      gb.sound.play(arpegio, 2);
    }
    if(gb.buttons.pressed(BTN_B)){
      gb.sound.stop();
      gb.sound.play(tetris_main1, 0);
      gb.sound.play(tetris_main2, 1);
      gb.sound.play(tetris_drum, 2);
    }

  }
}


