#include <SPI.h>
#include <EEPROM.h>
#include <Gamebuino.h>

Gamebuino gb;

// Configuration

// playground (field) dimensions
#define SCREEN_TILES_H                       16
#define SCREEN_TILES_V                       9
#define SOKOBAN_FIELD_WIDTH                  (SCREEN_TILES_H)
#define SOKOBAN_FIELD_HEIGHT                 (SCREEN_TILES_V)
#define SOKOBAN_FIELD_LEFT                   (0)
#define SOKOBAN_FIELD_TOP                    (0)
#define SOKOBAN_FIELD_RIGHT                  (SOKOBAN_FIELD_LEFT + SCREEN_TILES_H - 1)
#define SOKOBAN_FIELD_BOTTOM                 (SOKOBAN_FIELD_TOP + SCREEN_TILES_V - 1)
#define SOKOBAN_OFFSET_UP                    (0 - (SCREEN_TILES_H))
#define SOKOBAN_OFFSET_DOWN                  (SCREEN_TILES_H)
#define SOKOBAN_OFFSET_LEFT                  (-1)
#define SOKOBAN_OFFSET_RIGHT                 (1)

#define SOKOBAN_UNDO_RINGBUFFER_SIZE         (256)  // Size of the undo ringbuffer (count of moves) - must be tuned to fit into RAM

// Sokoban sounds
#define SOKOBAN_SOUND_MOVE                   (0)
#define SOKOBAN_SOUND_PUSH                   (1)
#define SOKOBAN_SOUND_CANT_MOVE              (2)
#define SOKOBAN_SOUND_CONGRAT                (3)
#define SOKOBAN_SOUND_KEY                    (4)

// Sokoban tiles (font)
#define FONT_SOKOBAN_FLOOR                   0
#define FONT_SOKOBAN_TARGET                  1
#define FONT_SOKOBAN_BLOCK                   2
#define FONT_SOKOBAN_BLOCK_TARGET            3
#define FONT_SOKOBAN_SKY                     4
#define FONT_SOKOBAN_WALL                    5
#define FONT_SOKOBAN_PLAYER                  6
#define FONT_SOKOBAN_PLAYER_TARGET           7
#define FONT_SOKOBAN_0                       8

const uint8_t sokoban_tiles[][7] PROGMEM = {
  {5,5, 0x00,0x00,0x00,0x00,0x00},
  {5,5, 0x00,0x00,0x20,0x00,0x00},
  {5,5, 0xF8,0x88,0x88,0x88,0xF8},
  {5,5, 0xF8,0x88,0xA8,0x88,0xF8},
  {5,5, 0x00,0x00,0x00,0x00,0x00},
  {5,5, 0xF8,0xC8,0xF8,0x98,0xF8},
  {5,5, 0x70,0x88,0x88,0x88,0x70},
  {5,5, 0x70,0x88,0xA8,0x88,0x70},
};

#define GUI_STATE_INTRO                    (0)
#define GUI_STATE_GAME                     (1)
#define GUI_STATE_LEVELS                   (2)
#define GUI_STATE_CONGRATS                 (3)
uint8_t current_gui_state = GUI_STATE_INTRO;

int8_t level_select_pos = 0;

// Sokoban Levels
#define SOKOBAN_LEVELS_COUNT (600) // number of levels in data lower

// Compressed level data
// levels are parts of:
//  - Microban, Sasquatch (by David W. Skinner - http://users.bentonrea.com/~sasquatch/sokoban/)
//  - Procedurally generated levels (by Joshua Taylor and Ian Parberry - http://larc.unt.edu/ian/research/sokoban/)

/*
 * Compression algorithm:
 * Stream is divided into nibbles (4-bit wide numbers).
 * First nibble defines width of level data (1-16) (width is value+1)
 * Second nibble defines height of level data (1-9) (height is value+1)
 * Next nibbles are level data:
 *   - if leftmost bit is 0, next 3 bits defines type of tile to write on screen:
 *     - 000 = floor
 *     - 001 = target
 *     - 010 = box
 *     - 011 = box on target
 *     - 100 = sky (empty = area outside walls - whole game area is at first set to this tile)
 *     - 101 = wall
 *     - 110 = sokoban (player)
 *     - 111 = sokoban on target
 *   - if leftmost bit is 1, next 3 bits defines type of tile, which is written double (two times), except for:
 *     - (1)110 = "enter" - jump to the leftmost position on next line (it is not necessary to use enter, because we know width of level, so it may overlap for better compression)
 *     - (1)111 = "end of level" - marks end of level (if it's on first nibble, second nibble should be 1111 too - to round level data to whole byte; end of level must be specified - isn't implied from width and height)
 *
 * Level is written into viewport of given width and height, which is centered in game area.
 *
 * Example: 0x42,0xdd,0xd6,0x21,0xdd,0xdf
 *   - 0x42: width of level is 4+1=5; height of level is 2+1=3
 *   - tiles are:
 *     - 0xdd: wall, wall; wall, wall
 *     - 0xd6: wall, (implicit new line), wall; sokoban
 *     - 0x21: box; target
 *     - 0xdd: wall, (implicit new line), wall; wall, wall
 *     - 0xdf: wall, wall; (end of level)
 *   - so level is:
 *     #####
 *     #@$.#
 *     #####
 */
const uint8_t sokoban_levels[] PROGMEM = {
0x56,0xdd,0xe5,0x01,0x5e,0x58,0xdd,0x36,0x8d,0x82,0x0d,0x8d,0xdd,0x5f,
0x56,0xdd,0xd5,0x88,0xd0,0x56,0x0d,0x02,0x30,0xd0,0x13,0x0d,0x88,0xdd,0xd5,0xff,
0x85,0xcd,0xde,0xd5,0x8d,0xd5,0x88,0x02,0x0d,0x05,0x85,0x20,0xd0,0x10,0x15,0x60,0xdd,0xdd,0xdf,
0x75,0xdd,0xdd,0x58,0x88,0xd0,0x1b,0x26,0xd8,0x88,0xdd,0xd8,0x5c,0xcd,0xdf,
0x76,0x4d,0xdd,0x54,0x58,0x80,0x54,0x50,0x12,0x10,0xd5,0x02,0x62,0x0d,0x81,0x21,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0xb5,0xdd,0xd0,0xdd,0xd8,0x8d,0x58,0x0d,0x0a,0x88,0x05,0x6d,0x02,0x05,0x91,0x80,0xd8,0x0d,0xdd,0xdd,0xd5,0xff,
0x67,0xdd,0xdd,0x88,0x0d,0x01,0x21,0x0d,0x02,0x12,0x0d,0x01,0x21,0x0d,0x02,0x12,0x0d,0x86,0x8d,0xdd,0xdf,
0x56,0xdd,0x5e,0x51,0x8d,0x56,0xa0,0xd5,0x80,0x54,0xd8,0x5c,0xd1,0x5c,0x4d,0x5f,
0xa7,0xcc,0xcd,0xd5,0xcc,0xc5,0x18,0x5c,0xcc,0x51,0x50,0xdd,0xdd,0x15,0x0d,0x06,0x02,0x02,0x02,0x0d,0x05,0x05,0x05,0x0d,0xd8,0x88,0x05,0xed,0xdd,0xd5,0xff,
0x87,0xcd,0xdd,0xec,0x58,0x85,0xec,0x50,0xd6,0xdd,0x50,0x50,0x20,0xd0,0x95,0x02,0x0d,0x88,0x80,0xd8,0xdd,0xdd,0xdf,
0x87,0xdd,0x5e,0x58,0x0d,0xe5,0x02,0x85,0xed,0x02,0x0d,0xd4,0xd5,0x61,0x85,0xc5,0x81,0x50,0x5c,0x58,0x80,0x5c,0xdd,0xd5,0xff,
0x68,0xdd,0xe5,0x10,0xde,0x51,0x60,0x5e,0x51,0x02,0x5e,0xd2,0x0d,0x54,0x50,0x28,0x54,0x58,0x85,0x45,0x8d,0x54,0xdd,0xff,
0x65,0xdd,0xdd,0x88,0x0d,0x05,0x05,0x0d,0x10,0x23,0x6d,0x80,0xdd,0xdd,0xff,
0x86,0xcc,0x4d,0x5e,0xdd,0xd6,0xd5,0x88,0x13,0x0d,0x80,0x58,0x0d,0xdd,0x25,0x05,0xcc,0x58,0x05,0xcc,0xdd,0x5f,
0x97,0x4d,0xde,0x45,0x8d,0xde,0x45,0x88,0x0d,0xed,0x0d,0x80,0x5e,0x51,0x01,0x50,0x62,0xd5,0x80,0x50,0xa0,0xd8,0x15,0x88,0xdd,0xdd,0xd5,0xff,
0x56,0xdd,0x5e,0x50,0x60,0x5e,0x59,0x15,0xe5,0xa2,0xd5,0x88,0xd8,0x8d,0xdd,0x5f,
0x68,0xdd,0xdd,0x88,0x0d,0x10,0x18,0xd0,0xd0,0xd5,0x82,0x05,0xed,0x52,0x05,0xec,0x56,0x05,0xec,0x58,0x5e,0xcd,0xdf,
0x77,0xdd,0xdd,0x58,0x09,0x0d,0x86,0xa0,0xdd,0xd0,0xdc,0x45,0x85,0xec,0x45,0x85,0xec,0x45,0x85,0xec,0x4d,0xdf,
0x87,0xdd,0xd5,0xe5,0x88,0x0d,0xd8,0x6a,0x9d,0xd5,0x0d,0x05,0xc5,0x88,0x05,0xc5,0x8d,0xdc,0x58,0x5e,0xcd,0xdf,
0x65,0xdd,0xe5,0x8d,0xd5,0x01,0x01,0x0d,0x0a,0x56,0xd5,0x88,0x54,0xdd,0xdf,
0x68,0xdd,0x5e,0x58,0x0d,0xd1,0x01,0x8d,0x80,0x50,0xd5,0x05,0x85,0x45,0x6a,0x05,0x45,0x88,0x54,0x58,0xd5,0x4d,0xdf,
0x66,0xdd,0xdd,0x83,0x8d,0x88,0x0d,0x50,0x50,0xd4,0x52,0x61,0x5e,0x45,0x80,0x5e,0x4d,0xd5,0xff,
0x66,0x50,0xdd,0x5c,0x58,0x0d,0xda,0x6d,0x80,0xdd,0x88,0x0d,0x01,0x01,0x0d,0xdd,0xdf,
0x66,0x4d,0xde,0x45,0x8d,0x54,0x50,0xa0,0xd5,0x91,0x0d,0x86,0x20,0xd8,0x0d,0xdd,0xdf,
0x57,0x4d,0xd5,0x45,0x06,0x05,0x45,0x80,0xdd,0x20,0xd0,0x91,0xd0,0xa0,0xdd,0x85,0xcd,0xdf,
0x66,0xdd,0xde,0x58,0x01,0x5e,0x50,0xd0,0xd5,0x8a,0x6d,0x05,0x80,0xd1,0x8d,0xdd,0xdf,
0x66,0xdd,0x5e,0x58,0x05,0xe5,0x06,0x05,0xe5,0x0a,0xdd,0x51,0x01,0x05,0x45,0x88,0x54,0xdd,0xdf,
0xa8,0xcc,0x4d,0xd5,0xec,0xc4,0x58,0x0d,0xcc,0x45,0x88,0x54,0xdd,0xd8,0x0d,0x58,0x80,0x51,0x0d,0x02,0x02,0x06,0x8d,0x50,0xdd,0xd1,0x5e,0x58,0x88,0x85,0xed,0xdd,0xdd,0xff,
0x56,0xdd,0xe5,0x8d,0xd0,0xa0,0xd9,0x10,0xd0,0x62,0x0d,0x80,0xdd,0xd5,0xff,
0x66,0xcd,0xde,0x4d,0x85,0xed,0x62,0x1d,0x50,0xa8,0xd0,0x10,0x10,0xdd,0x80,0x5c,0xdd,0x5f,
0x66,0x4d,0xde,0xd8,0xdd,0x88,0x0d,0x1b,0x26,0xd8,0x0d,0xd5,0x85,0xe4,0xdd,0xff,
0x66,0xdd,0xdd,0x10,0x58,0xd8,0x28,0xd1,0x02,0x56,0xd8,0x28,0xd1,0x05,0x8d,0xdd,0xdf,
0x85,0xcd,0xde,0xd5,0x8d,0xd5,0x88,0x80,0xd6,0x2b,0x31,0x0d,0x88,0x80,0xdd,0xdd,0xdf,
0xe4,0xdd,0xe5,0x8d,0xdd,0xdd,0xd5,0x02,0x02,0x02,0x02,0x02,0x06,0x0d,0x09,0x91,0x88,0x80,0xdd,0xdd,0xdd,0xdd,0xff,
0x87,0xcc,0xcd,0xdd,0xd0,0x51,0xd8,0x0d,0x51,0xd8,0x02,0x05,0x1d,0x02,0x82,0x8d,0xdd,0x65,0x05,0xcc,0x58,0x05,0xcc,0xdd,0x5f,
0x96,0xdd,0xdd,0xd5,0x88,0x88,0xd0,0xd1,0xd5,0x0d,0x05,0x0a,0x01,0x0d,0x01,0x06,0x2d,0x0d,0xdd,0x88,0x5c,0xcd,0xdd,0xff,
0x98,0xdd,0x5e,0x58,0x0d,0xde,0x50,0x50,0x50,0x15,0xe5,0x88,0x20,0xdd,0xd0,0x52,0x18,0xd8,0x05,0x68,0x0d,0x05,0x0d,0xdd,0x58,0x05,0xed,0xd5,0xff,
0x65,0x4d,0xd5,0xe4,0x58,0x05,0xed,0x80,0xd5,0x0a,0x20,0xd0,0x17,0x10,0xdd,0xdd,0xff,
0x75,0xdd,0xd5,0xe5,0x88,0x05,0xe5,0x6a,0x20,0xd5,0x85,0x91,0xd5,0x88,0xd4,0xdd,0xdf,
0x67,0xc4,0xdd,0xc4,0x58,0x5c,0x45,0x60,0xdd,0x52,0x1d,0x80,0x21,0xd0,0x50,0x21,0xd8,0x8d,0xdd,0xdf,
0x88,0xcc,0x4d,0xdc,0xc4,0x50,0x65,0xcc,0x45,0x8d,0xdd,0x50,0x1d,0x80,0x28,0x1d,0x8a,0x50,0x1d,0x88,0xdd,0xd5,0x85,0xec,0xdd,0xff,
0x42,0xdd,0xd6,0x21,0xdd,0xdf,
0x56,0xdd,0xd5,0x91,0x0d,0x82,0x0d,0x05,0x2d,0x58,0x20,0xd8,0x60,0xdd,0xd5,0xff,
0x67,0x4d,0xdd,0xd8,0x8d,0x8d,0x0d,0x05,0x02,0x0d,0x83,0x01,0xd5,0x05,0x6d,0x45,0x80,0x5e,0x4d,0xd5,0xff,
0xa6,0xcd,0xdd,0x5e,0xd5,0x88,0x05,0xe5,0x02,0x02,0x80,0x5e,0x50,0xd5,0x0d,0xdd,0x06,0x01,0x01,0x80,0xd8,0x0d,0x58,0x0d,0xdd,0x0d,0xd5,0xff,
0x77,0xdd,0xde,0x58,0x60,0x5e,0x58,0x50,0xde,0x50,0x15,0x8d,0x50,0x1a,0x20,0xd0,0x15,0x80,0xdd,0x58,0x05,0xc4,0xdd,0x5f,
0x96,0xcd,0xde,0xd5,0x8d,0xdd,0x82,0x86,0x9d,0x02,0x88,0x50,0xdd,0x0d,0xd0,0x5c,0x58,0x88,0x5c,0xdd,0xdd,0xff,
0x76,0xdd,0xe5,0x8d,0x5e,0x58,0x8d,0xd8,0x23,0x60,0xdd,0x01,0x50,0x5c,0x58,0x85,0xcd,0xdd,0xff,
0x57,0xcd,0xdd,0x50,0x6d,0x82,0x0d,0x83,0x1d,0x83,0x1d,0x82,0x0d,0xd8,0x5c,0xdd,0xff,
0x66,0x4d,0xd5,0xed,0x10,0x1d,0x50,0x30,0x30,0xd8,0x58,0xd0,0x20,0x20,0xd5,0x06,0x0d,0x4d,0xd5,0xff,
0xb7,0xcc,0xcd,0xdd,0xcc,0xc5,0x88,0x5c,0xdd,0x50,0x18,0xdd,0x8d,0x51,0x8d,0x02,0x82,0x81,0x0d,0x50,0x6a,0x05,0x01,0x05,0xed,0x88,0xdd,0x5e,0x4d,0xdd,0xff,
0x97,0xdd,0xdd,0xe5,0x06,0x05,0x85,0xe5,0x88,0x85,0xed,0xd5,0x20,0x5e,0xcc,0x58,0xd5,0x4d,0x05,0x20,0x95,0x4d,0x05,0x8d,0x5c,0xcd,0xdf,
0x65,0xdd,0x5e,0x58,0x0d,0xd8,0x28,0xd5,0x30,0x10,0x54,0x58,0x06,0x54,0xdd,0xdf,
0x78,0xcd,0xde,0xc5,0x85,0xec,0x56,0x05,0xec,0x58,0x5e,0xd5,0x0d,0xd5,0x88,0x30,0xd8,0x28,0x0d,0xdd,0x10,0x5c,0xcd,0xdf,
0x66,0xdd,0xe5,0x8d,0xd5,0x13,0x28,0xd0,0x12,0x50,0xd5,0x06,0x85,0x45,0x80,0xd4,0xdd,0x5f,
0xc8,0xdd,0xdd,0xdd,0xe5,0x88,0x88,0x85,0xe5,0x0d,0xdd,0x50,0x6d,0x50,0x58,0x88,0x80,0xd0,0x58,0x28,0x05,0x8d,0x0a,0x0d,0xd5,0x8d,0xd8,0x50,0x50,0x91,0x5c,0xdd,0x05,0x88,0x5c,0xcc,0x4d,0xdd,0xff,
0xc5,0xc4,0xdd,0xdd,0xdd,0xd8,0x8d,0x8d,0x8a,0x29,0x92,0x6d,0x88,0x8d,0x58,0xd8,0x0d,0xd0,0xdd,0xdd,0x5f,
0x98,0x4d,0xdd,0xed,0x88,0x5e,0x58,0x02,0x05,0xe5,0x8a,0x05,0xed,0x50,0x1d,0xd5,0xcd,0x15,0x06,0x05,0xc4,0x51,0x82,0x05,0xc4,0x51,0x0d,0xdc,0x4d,0xdf,
0x88,0xcd,0xdd,0xec,0x58,0x85,0xec,0x58,0x20,0x5e,0x4d,0xd2,0x05,0xed,0x02,0x02,0x05,0xe5,0x99,0x50,0xd5,0x88,0x06,0x0d,0x58,0x58,0x05,0x4d,0xdd,0xdf,
0x67,0xdd,0x5e,0x58,0x0d,0xe5,0x05,0x85,0xe5,0x62,0x31,0xdd,0x81,0x05,0x45,0x02,0x50,0x54,0xd8,0x05,0xcd,0xd5,0xff,
0x96,0x4d,0xde,0x45,0x8d,0xdd,0xd8,0x82,0x8d,0x01,0x50,0x28,0x0d,0x01,0x52,0xdd,0xd0,0x16,0x05,0xed,0xdd,0xff,
0xa7,0xdd,0x8d,0xde,0x58,0xdd,0x85,0xe5,0x85,0x85,0x85,0xe5,0x85,0x88,0x2d,0x58,0x10,0x15,0x28,0xd6,0x0d,0x05,0x02,0x0d,0x80,0x10,0x58,0x0d,0xdd,0xdd,0xdf,
0xc8,0xdd,0xdd,0xd5,0xe5,0x88,0x05,0x80,0xdd,0x02,0x62,0x05,0x01,0x81,0xd0,0xd0,0xd5,0x0d,0x0d,0x05,0x88,0x80,0x50,0xd0,0x58,0x05,0x80,0x50,0xd0,0xdd,0xdd,0x50,0xd8,0x88,0x88,0x0d,0xdd,0xdd,0xdd,0xff,
0xa7,0x4d,0xde,0x45,0x8d,0xdd,0x54,0x52,0x06,0x58,0x01,0xd5,0x05,0xa8,0x01,0xd8,0x28,0xd9,0xd8,0x05,0x0d,0xdd,0xd8,0x05,0xec,0xdd,0x5f,
0x96,0x4d,0xdd,0x5e,0xd0,0x99,0xde,0x58,0x0d,0xdd,0x58,0x02,0x02,0x06,0xdd,0x82,0x02,0x05,0xcd,0x58,0x85,0xcc,0xdd,0xdf,
0xa6,0xdd,0xdd,0xde,0x50,0x60,0x99,0x05,0xe5,0x80,0xdd,0x2d,0xd0,0x58,0x20,0x20,0x54,0x50,0x28,0x88,0x54,0x58,0x0d,0xdd,0x4d,0xd5,0xff,
0xa7,0x4d,0xdd,0x5e,0xd8,0x80,0xde,0x58,0x20,0x28,0x5e,0x50,0x20,0x20,0x20,0x5e,0xd0,0xd5,0x0d,0xd4,0x56,0x89,0x91,0x54,0xd8,0x80,0xd5,0xcd,0xdd,0x5f,
0x95,0x4d,0xdd,0xd5,0x45,0x88,0x58,0xd5,0x02,0x52,0x58,0xd8,0x12,0x16,0x8d,0x81,0x58,0x8d,0xdd,0xdd,0x5f,
0x58,0x4d,0xd5,0x45,0x80,0x54,0x50,0x10,0xd5,0x03,0x0d,0x83,0xd5,0x86,0xdd,0x02,0x05,0x45,0x80,0x54,0xdd,0x5f,
0x77,0xdd,0x5e,0x58,0x0d,0x5e,0x50,0x18,0x0d,0xd3,0x52,0x8d,0x01,0x50,0x20,0xd0,0x6d,0x0d,0x58,0x80,0x5e,0xdd,0xd5,0xff,
0x87,0xcc,0xdd,0xec,0xd5,0x8d,0x4d,0x02,0x80,0xd5,0x02,0x85,0x0d,0x06,0x5a,0x8d,0x09,0x8d,0xd0,0x9d,0x5e,0xdd,0x5f,
0x98,0xdd,0xdd,0xd5,0x80,0xd8,0x0d,0x02,0x82,0x65,0x0d,0xd5,0x05,0x02,0x05,0xc4,0x51,0x58,0xd4,0x50,0x51,0x50,0x25,0xe4,0x50,0x51,0x80,0x5e,0x45,0x05,0x18,0x05,0xec,0x4d,0xdd,0xff,
0x96,0x4d,0xdd,0xde,0x45,0x86,0x80,0x5e,0x45,0x02,0x82,0x05,0xed,0x50,0xd0,0xdd,0x82,0x92,0x8d,0x80,0x98,0x0d,0xdd,0xdd,0x5f,
0xa4,0xdd,0xdd,0xdd,0x88,0x1d,0x8d,0x0a,0x69,0xa0,0xd8,0x0d,0x18,0x0d,0xdd,0xdd,0xdf,
0x87,0xdd,0xdd,0xd0,0x60,0x58,0x0d,0x02,0x02,0x80,0xd5,0x2d,0x50,0xd5,0x89,0x18,0xd8,0x05,0x80,0xdd,0xd5,0x85,0xcc,0x4d,0xdf,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x01,0xa1,0x0d,0x02,0x92,0x0d,0x02,0x92,0x0d,0x01,0xa1,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xd5,0xe5,0x06,0x58,0x5e,0x51,0x28,0x05,0xe5,0x10,0x50,0x2d,0x51,0x25,0x80,0xd1,0x05,0x02,0x0d,0x85,0x80,0xdd,0xdd,0x5f,
0xa7,0xdd,0xdd,0xdd,0x99,0x58,0x8d,0x85,0x80,0xa0,0xd8,0x68,0xd8,0xd8,0x80,0xd2,0x0d,0xdd,0x58,0x20,0x5c,0xc4,0x58,0x85,0xcc,0x4d,0xdd,0xff,
0x77,0xcd,0xd5,0xec,0x50,0x10,0xdd,0x50,0x28,0xd0,0x10,0x25,0x6d,0x05,0x20,0x10,0xd8,0x20,0xdd,0x50,0x10,0x5e,0x4d,0xd5,0xff,
0x88,0xcc,0xdd,0xdd,0xd8,0x0d,0x88,0x28,0xd8,0x25,0x25,0x6d,0xd0,0x58,0x05,0xc5,0x09,0x10,0x5c,0xd5,0x8d,0xcc,0x58,0x5e,0xcc,0xdd,0xff,
0x98,0x4d,0xdd,0xde,0x45,0x88,0x85,0xe4,0x56,0x80,0x20,0x5e,0xd0,0xd5,0x20,0x5e,0x50,0x99,0x1d,0xd0,0x20,0x20,0x28,0xdd,0xd5,0x05,0x05,0xcc,0x45,0x80,0x5c,0xc4,0xdd,0x5f,
0x77,0xdd,0xdd,0x58,0x88,0xd0,0x2b,0x30,0xd0,0x38,0x30,0xd0,0x38,0x30,0xd0,0xb3,0x10,0xd8,0x80,0x6d,0xdd,0xd5,0xff,
0xe7,0xdd,0x88,0x0d,0xd5,0xe5,0x8d,0x58,0x05,0x80,0xd5,0x88,0x58,0x05,0x20,0x20,0xd9,0x50,0xdd,0x50,0x58,0xd8,0x68,0x85,0x02,0x02,0x0d,0x95,0x88,0x88,0x0d,0xd8,0x0d,0xdd,0xd5,0xe4,0xdd,0x5f,
0x88,0xcd,0xde,0xc5,0x85,0xec,0x50,0x2d,0xdd,0x51,0x01,0x8d,0x02,0x05,0x02,0x0d,0x81,0x01,0xdd,0xd5,0x20,0x5e,0xc4,0x50,0x65,0xec,0x4d,0xdf,
0xa8,0xdd,0xde,0x58,0x8d,0x5e,0x58,0x50,0x20,0x5e,0x58,0x20,0x60,0x5e,0xd0,0xd0,0xdd,0xd8,0x59,0x99,0xd0,0x20,0x20,0x20,0x20,0xd5,0x80,0xdd,0xd4,0xdd,0x5f,
0xb7,0xcc,0xdd,0x5e,0xdd,0x58,0x0d,0xd5,0x88,0x05,0x88,0xd8,0x59,0x91,0x8d,0x58,0xd0,0x50,0xd5,0x45,0xa6,0xa2,0x05,0xe4,0x58,0x80,0xd5,0xe4,0xdd,0xd5,0xff,
0x96,0xcc,0x4d,0xd5,0xc4,0xd5,0x80,0xdd,0x59,0x91,0xd0,0x6a,0xa2,0x0d,0x88,0x05,0x0d,0xdd,0x58,0x05,0xec,0xcd,0xd5,0xff,
0xd8,0xdd,0xdd,0xdd,0xd5,0x88,0x85,0x88,0x0d,0x02,0x6a,0x05,0x01,0x09,0xd5,0x0d,0x0d,0x50,0xd0,0x54,0x50,0x58,0x88,0x05,0x05,0x45,0x05,0x80,0x58,0x05,0x05,0x45,0x0d,0xdd,0xd5,0x05,0x45,0x88,0x88,0x80,0x54,0xdd,0xdd,0xdd,0x5f,
0xc7,0xcc,0xcd,0xd5,0xec,0xcc,0x58,0x0d,0xec,0xcc,0x50,0x28,0x5e,0xdd,0xdd,0x05,0x6d,0x50,0x18,0x50,0x20,0x28,0xd8,0x88,0x82,0x50,0xd9,0x1d,0xd5,0x80,0xdd,0xd8,0x0d,0xd5,0xff,
0xb6,0x4d,0xdd,0xdd,0xd5,0x99,0x91,0x8d,0x0a,0xaa,0x26,0x0d,0x80,0x50,0x50,0x50,0xd5,0x05,0x05,0x88,0x05,0xe5,0x80,0xdd,0xd5,0xed,0xd5,0xff,
0x98,0xd0,0xdd,0xed,0xd8,0xdd,0x45,0x02,0x02,0x18,0xd5,0x05,0x81,0x20,0xd8,0x0d,0x1d,0xd8,0x28,0x10,0x5e,0x50,0x60,0x58,0x05,0xe5,0x8d,0xdd,0xed,0xdf,
0xa7,0xcd,0xdd,0xdd,0xd8,0x05,0x80,0xd0,0x30,0x20,0x10,0x10,0xd8,0x02,0x0d,0x0d,0xdd,0x35,0x80,0x5e,0x45,0x86,0x8d,0x5e,0x45,0x80,0xd5,0xe4,0xdd,0x5f,
0xa7,0xcd,0xdd,0xdd,0xd0,0x60,0x58,0x0d,0x03,0x02,0x03,0x90,0xd8,0x02,0x05,0x80,0xdd,0x53,0x58,0xd5,0x45,0x88,0x0d,0xe4,0x58,0x0d,0x5e,0x4d,0xd5,0xff,
0xb6,0xdd,0x58,0xdd,0xd8,0x0d,0xd9,0x0d,0x0a,0x28,0x88,0xd8,0x02,0x58,0x90,0xdd,0x06,0x58,0xd0,0x5c,0x58,0xd8,0x85,0xcd,0xdd,0xdd,0xff,
0x97,0xdd,0xe5,0x06,0xd5,0xe5,0x13,0x8d,0xdd,0x95,0xa0,0x20,0xd5,0x88,0x80,0x54,0x50,0x50,0xd8,0x54,0x58,0x0d,0xd5,0x4d,0xd5,0xff,
0x97,0x4d,0xdd,0x5e,0x45,0x81,0x01,0xd5,0x45,0x01,0x01,0x01,0x0d,0xd0,0xdd,0x0d,0x86,0x28,0x20,0xd8,0xa8,0x20,0xdd,0x58,0x0d,0x5c,0x4d,0xd5,0xff,
0xa6,0xdd,0xd5,0xe5,0x88,0x0d,0xdd,0x0a,0x56,0xd9,0xd0,0x58,0x88,0x0d,0x82,0x05,0x05,0x8d,0xd5,0x02,0x89,0x5c,0x4d,0xdd,0xdf,
0x87,0x4d,0xdd,0x5e,0x45,0x88,0x05,0xed,0x0d,0x52,0xd5,0x12,0x80,0x60,0xd0,0x90,0x52,0x0d,0x1d,0x82,0x0d,0x88,0xdd,0xdd,0xdf,
0xd8,0xdd,0xdd,0x0d,0xdd,0x85,0x80,0xd5,0x80,0xd8,0x88,0xd0,0x28,0xd1,0x50,0x60,0xd0,0x28,0xd5,0x15,0x80,0x50,0x28,0xde,0x51,0x58,0x82,0x8d,0xe5,0x10,0xd0,0xdd,0x5e,0xd8,0x85,0xe4,0xdd,0xdf,
0x98,0xcd,0xdd,0xdc,0x58,0x50,0x10,0x5c,0x58,0x01,0x31,0x5c,0x58,0x50,0x30,0xdd,0x52,0xd1,0xd5,0x88,0x82,0x0d,0x02,0x0d,0x02,0x0d,0x80,0x65,0x80,0xdd,0xdd,0xd5,0xff,
0x88,0xcd,0xde,0xc5,0x85,0xec,0x58,0xdd,0xd5,0x21,0x28,0xd8,0x16,0x18,0xd8,0x21,0x2d,0xdd,0x58,0x5e,0xc4,0x58,0x5e,0xc4,0xdd,0xff,
0x88,0x4d,0xdd,0x5e,0xd8,0x18,0xd5,0x01,0xa2,0x10,0xd0,0x21,0x01,0x20,0xd1,0x20,0x60,0x21,0xd0,0x21,0x01,0x20,0xd0,0x1a,0x21,0x0d,0x58,0x18,0xd4,0xdd,0xd5,0xff,
0xe6,0xdd,0xdd,0xd5,0xe5,0x81,0x85,0x80,0x5e,0x50,0x51,0x86,0x80,0x5e,0x58,0x59,0x50,0xdd,0xdd,0x58,0xd0,0xa0,0x20,0x20,0x54,0xd8,0x88,0x88,0x05,0xcd,0xdd,0xdd,0xd5,0xff,
0xe7,0xcc,0x4d,0xde,0x4d,0xd5,0x85,0xe4,0x58,0x80,0x2d,0xdd,0xd5,0x0d,0x09,0x58,0x91,0xd0,0x20,0xa5,0x28,0x68,0x0d,0x88,0x88,0xd5,0x8d,0xdd,0xd8,0x50,0xdd,0xcc,0xcd,0xdf,
0xe8,0xdd,0xd0,0xdd,0xe5,0x88,0x05,0x88,0x5e,0x51,0xd8,0x52,0xd8,0x5e,0x58,0x05,0x88,0x05,0x85,0xe5,0x28,0x50,0xd5,0x85,0x8d,0x05,0x88,0x85,0x85,0x0d,0x05,0x0d,0xd8,0x50,0x50,0xd1,0x06,0x88,0x20,0x30,0x10,0xdd,0xdd,0xdd,0xdd,0xff,
0x57,0xdd,0xe5,0x85,0xe5,0x85,0xe5,0x8d,0xd1,0xa6,0xd8,0x10,0xd8,0xdd,0xd5,0xff,
0x57,0x4d,0xd5,0x45,0x80,0xd5,0x15,0x0d,0x86,0x0d,0x82,0x0d,0x05,0x3d,0x58,0x05,0xed,0xd5,0xff,
0x67,0xc4,0xdd,0xdd,0x8d,0x85,0x8d,0x01,0x01,0x0d,0x06,0xa0,0xd0,0x50,0xdd,0x80,0x5e,0xdd,0x5f,
0x97,0x4d,0xd5,0xed,0x06,0x0d,0xde,0x58,0x58,0x10,0xd5,0x05,0x88,0x8d,0x0a,0x05,0x18,0xd5,0x88,0xdd,0x4d,0x80,0x5e,0xcd,0xd5,0xff,
0x76,0xdd,0xde,0x58,0x85,0xe5,0x0a,0x0d,0xdd,0x06,0x85,0xc5,0x81,0x05,0xcd,0x01,0xdc,0x4d,0xdf,
0x87,0xc4,0xdd,0xed,0xd8,0x5e,0x56,0x13,0x85,0xe5,0x85,0x8d,0xdd,0x58,0x20,0x5c,0x45,0x85,0x05,0xc4,0xd8,0x05,0xcc,0xdd,0x5f,
0x66,0xcd,0xdd,0xd8,0x0d,0x82,0x50,0xd8,0x12,0x0d,0x50,0xd1,0x54,0x58,0x06,0x54,0xdd,0xdf,
0x76,0xdd,0xdd,0x58,0x06,0x8d,0x80,0x38,0xdd,0x12,0xd5,0xc5,0x03,0x05,0xec,0x58,0x05,0xec,0xdd,0x5f,
0x56,0xdd,0xd5,0x88,0xd0,0x52,0x6d,0x01,0x31,0xd0,0x52,0x0d,0x88,0xdd,0xd5,0xff,
0x65,0xdd,0x5e,0x58,0x05,0xe5,0x80,0xdd,0xa2,0x60,0xd9,0x18,0xdd,0xdd,0xff,
0x55,0xdd,0xd5,0x15,0x8d,0x6a,0x0d,0x92,0x0d,0x58,0x05,0x4d,0xd5,0xff,
0x78,0x4d,0xdd,0x54,0x58,0x58,0x54,0x58,0x52,0x0d,0x58,0x13,0x7d,0x80,0x52,0x0d,0x80,0x58,0xd5,0x8d,0xd4,0x58,0x5e,0x4d,0xdf,
0x67,0xdd,0x5e,0x58,0x0d,0xd8,0x80,0xd8,0x80,0xdd,0x1d,0xd0,0x23,0x20,0xd8,0x78,0xdd,0xdd,0xff,
0x66,0x4d,0xde,0xd8,0xdd,0x01,0x28,0xd6,0x12,0x8d,0x01,0x20,0xdd,0x8d,0xe4,0xdd,0xff,
0x66,0xdd,0xe5,0x8d,0xd5,0x85,0x8d,0x12,0xb6,0xd5,0x88,0x54,0x58,0x0d,0x4d,0xd5,0xff,
0x77,0xcc,0xdd,0xcd,0x58,0x5c,0x50,0xa0,0x54,0xd0,0x58,0xd5,0x01,0x52,0x6d,0x88,0x8d,0x09,0xdd,0xdd,0x5f,
0x57,0x4d,0xd5,0x45,0x80,0x54,0x52,0x56,0xd5,0x02,0x0d,0x80,0xd5,0x13,0x10,0xd8,0x8d,0xdd,0x5f,
0x67,0x4d,0xd5,0xe4,0x58,0x0d,0x45,0x25,0x60,0x54,0x50,0x28,0xd5,0x8d,0xd0,0x21,0x8d,0x10,0x18,0xdd,0xdd,0xff,
0x67,0xdd,0xdd,0x88,0x0d,0x0a,0x21,0xd5,0x05,0x61,0x54,0x50,0x50,0x15,0x45,0x85,0x05,0x4d,0x80,0x5c,0xdd,0x5f,
0x67,0x4d,0xde,0x45,0x8d,0x54,0x52,0x80,0x54,0x50,0x15,0x0d,0x53,0x18,0xd0,0x20,0xdd,0x06,0x05,0xed,0xd5,0xff,
0xa8,0x4d,0xdd,0xd5,0xe4,0x58,0x85,0x85,0xe4,0x50,0x20,0x28,0x05,0xe4,0xd0,0xd5,0x85,0xed,0x50,0x50,0x56,0xdd,0x80,0xd5,0x80,0xd0,0x50,0x10,0x18,0x0d,0x80,0xdd,0xdd,0xdd,0xff,
0xb7,0x4d,0xd5,0x0d,0xd5,0x45,0x80,0xd5,0x80,0x54,0x56,0x28,0xd9,0x0d,0xd2,0x58,0x88,0xd8,0x0d,0x0d,0x8d,0x88,0x80,0xdd,0x58,0x05,0x80,0x5e,0xdd,0xdd,0x5f,
0x67,0x4d,0xd5,0xed,0x80,0xd5,0x01,0x21,0x0d,0x02,0x52,0x0d,0x01,0x21,0x0d,0x88,0xdd,0x06,0xde,0x4d,0xdf,
0x77,0xdd,0xdd,0x58,0x88,0xd0,0xd5,0x20,0xd0,0x58,0x20,0xd0,0x51,0x32,0x6d,0x05,0x15,0x8d,0x81,0x58,0xdd,0xdd,0x5f,
0x87,0xcd,0xdd,0x5c,0x58,0x80,0xdd,0x0d,0x50,0xd0,0x93,0x80,0xd8,0xa6,0x0d,0xdd,0x8d,0xec,0x45,0x85,0xec,0x4d,0xdf,
0x77,0xdd,0xde,0x58,0x85,0xe5,0x0d,0x2d,0xd0,0x50,0x28,0xd0,0x61,0x31,0x0d,0x58,0x80,0x54,0x58,0xdd,0x4d,0xdf,
0xd8,0xcc,0xcc,0x4d,0xd5,0xcc,0xcc,0x45,0x80,0xdd,0xdd,0xd5,0x05,0x0d,0x18,0x80,0x58,0x28,0xd1,0x86,0x85,0x88,0xd5,0x15,0x0d,0xdd,0x58,0xd8,0x88,0x80,0xa0,0xd5,0x8d,0xd5,0x88,0x54,0xdd,0x80,0xdd,0xdf,
0x98,0xcd,0xdd,0xdc,0x58,0x58,0x05,0xc5,0x82,0x80,0x5c,0x58,0xd2,0xdd,0xd0,0xd8,0xd0,0x69,0x15,0x20,0xd8,0x88,0x8d,0xdd,0x58,0xdc,0xc4,0xdd,0xff,
0xa6,0xd5,0x0d,0xdd,0xd5,0x0d,0xd8,0x0d,0x0d,0x09,0x15,0x05,0x4d,0x52,0x80,0x50,0xd5,0x8a,0xd5,0x0d,0x50,0x68,0x88,0xdd,0xdd,0xdd,0xff,
0xa7,0xcc,0xdd,0xde,0xcc,0x58,0x8d,0x4d,0xd0,0xd8,0xd5,0x88,0x85,0x0d,0x06,0x2b,0x10,0x50,0xd8,0x05,0x0d,0x8d,0xdd,0x88,0xdc,0xcd,0xdd,0xff,
0x78,0xcd,0xdd,0xc5,0x88,0xdd,0x0d,0x0d,0x09,0x18,0xd8,0x20,0xdd,0x05,0x2d,0xe5,0x82,0x05,0xe5,0x86,0x05,0xed,0xdd,0xff,
0x78,0x4d,0xdd,0xed,0x88,0x5e,0x58,0xd0,0x5e,0x56,0x50,0x20,0x5e,0x58,0x39,0x5e,0xd0,0x52,0xd5,0x45,0x88,0x05,0x4d,0x58,0x05,0xc4,0xdd,0x5f,
0x58,0x4d,0xd5,0x45,0x80,0xd5,0x01,0x0d,0x83,0x0d,0x05,0x0d,0x58,0x20,0xd5,0x03,0x05,0x45,0x06,0x05,0x4d,0xd5,0xff,
0x76,0xdd,0x5e,0x58,0x0d,0xd5,0x05,0x01,0x8d,0x05,0x21,0x8d,0x06,0x23,0x50,0xdd,0x58,0x05,0xc4,0xdd,0x5f,
0x97,0x4d,0xdd,0x5e,0x45,0x88,0x0d,0xd5,0x0d,0x52,0x8d,0x89,0x02,0x8d,0x81,0xd2,0x0d,0xd5,0x05,0x06,0xde,0xc5,0x80,0xde,0xcd,0xd5,0xff,
0xa7,0xcc,0x4d,0xde,0xcc,0x45,0x06,0xde,0xdd,0xd0,0x20,0xd5,0x81,0x05,0x02,0x8d,0x88,0x82,0x50,0xd5,0x09,0x58,0x85,0x4d,0x8d,0xdd,0xcd,0xdf,
0xc6,0xc4,0xd5,0x8d,0xdd,0xd5,0x0d,0xd8,0x0d,0x8d,0x58,0x88,0xd0,0x98,0xaa,0x8d,0x09,0x85,0x06,0x58,0xdd,0xdd,0xdd,0xdc,0xcc,0x58,0x5f,
0x96,0xcc,0x4d,0xd5,0x4d,0xd5,0x80,0xd5,0x87,0x85,0x0d,0x0a,0x1a,0x8d,0x85,0x15,0x0d,0xd5,0x81,0x85,0xe4,0xdd,0xd5,0xff,
0x68,0x4d,0xd5,0xed,0x80,0x5e,0x58,0x85,0xe5,0x01,0x21,0xdd,0x25,0x20,0x54,0x51,0x21,0x05,0x45,0x88,0x54,0x50,0x60,0xd4,0xdd,0x5f,
0x86,0x4d,0xdd,0xd4,0x58,0x58,0x0d,0x58,0x52,0x8d,0x01,0x36,0x31,0x0d,0x82,0x58,0xd5,0x80,0x58,0x5e,0xdd,0xdd,0xff,
0x76,0xdd,0xdd,0x58,0x21,0x8d,0x82,0x18,0xdd,0x8d,0xd8,0x21,0x8d,0x60,0x21,0x8d,0xdd,0xd5,0xff,
0x78,0xc4,0xdd,0xec,0x45,0x85,0xec,0x45,0x20,0x5e,0xc4,0x58,0x5e,0xdd,0x6d,0xd8,0x28,0x0d,0x89,0x30,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x76,0x4d,0xdd,0xe4,0x58,0x85,0xe4,0x51,0x09,0xdd,0x52,0x06,0x0d,0x02,0x82,0x0d,0x80,0xdd,0xdd,0x5f,
0x77,0xc4,0xdd,0x5c,0xd8,0x0d,0xd0,0x15,0x0d,0x82,0x32,0x6d,0x80,0x15,0x0d,0xd0,0x58,0x5c,0x58,0x0d,0xcd,0xd5,0xff,
0x77,0xc4,0xdd,0x54,0xd5,0x80,0xd5,0x88,0x0d,0x0b,0x20,0xd5,0x83,0x01,0x5e,0xd5,0x05,0x65,0xec,0x58,0x05,0xec,0xdd,0x5f,
0x88,0xcc,0xdd,0xe4,0xdd,0x8d,0x45,0x88,0x20,0x54,0x50,0x58,0x50,0xd5,0x05,0xa2,0x6d,0x09,0x8d,0xd0,0x90,0xde,0xd5,0x85,0xec,0xdd,0xff,
0x97,0x4d,0xdd,0xe4,0x58,0x8d,0x5e,0x45,0x02,0x82,0x05,0xe4,0xd2,0x50,0x50,0x5e,0xd5,0x05,0x65,0x0d,0x50,0x10,0x10,0x18,0xd8,0x0d,0x80,0xdd,0xdd,0xd5,0xff,
0x95,0xdd,0x5e,0x58,0x05,0xe5,0x80,0xdd,0xd5,0xaa,0x02,0x06,0xd9,0x91,0x80,0xdd,0xdd,0xd5,0xff,
0x87,0xc4,0xdd,0xec,0x45,0x8d,0x5c,0x45,0x01,0x85,0xc4,0x52,0x16,0x0d,0xd5,0x01,0x20,0xd8,0xa1,0xdd,0x88,0x05,0xed,0xdd,0x5f,
0xb8,0xdd,0x5e,0x58,0x0d,0xd5,0xe5,0x80,0x20,0x20,0xd5,0xed,0x02,0x88,0x20,0xd4,0xdd,0xd0,0x90,0x5c,0xc4,0x51,0x01,0x06,0x5c,0xc4,0x58,0x80,0x5c,0xc4,0xd5,0x8d,0xcc,0xc4,0xdd,0xff,
0x96,0xdd,0xdd,0x5e,0x58,0xd8,0x0d,0x50,0x20,0xa3,0x60,0xd8,0x50,0x10,0x50,0xd5,0x05,0x10,0x18,0x54,0x58,0x0d,0xd5,0x4d,0xd5,0xff,
0x66,0xdd,0xdd,0x01,0x01,0x0d,0x1a,0x21,0xd0,0x26,0x20,0xd1,0xa2,0x1d,0x01,0x01,0x0d,0xdd,0xdf,
0x77,0xdd,0xdd,0x58,0x58,0x0d,0x85,0x90,0xd0,0xaa,0x2d,0x85,0x91,0xd8,0x58,0x0d,0x86,0x80,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x58,0x05,0x8d,0x02,0x12,0x10,0xd5,0x18,0x20,0xd0,0x28,0x1d,0x50,0x12,0x12,0x0d,0x85,0x86,0xdd,0xdd,0x5f,
0x88,0xdd,0xdd,0xd8,0x88,0x0d,0x03,0x23,0x23,0x0d,0x02,0x91,0x20,0xd0,0x31,0x01,0x30,0xd0,0x29,0x12,0x0d,0x03,0x23,0x23,0x0d,0x88,0x86,0xdd,0xdd,0xdf,
0x88,0xdd,0xdd,0xd8,0x88,0x0d,0x01,0x21,0x21,0x0d,0x02,0x12,0x12,0x0d,0x01,0x26,0x21,0x0d,0x02,0x12,0x12,0x0d,0x01,0x21,0x21,0x0d,0x88,0x80,0xdd,0xdd,0xdf,
0x88,0xdd,0xdd,0xd8,0x88,0x0d,0x02,0x12,0x12,0x0d,0x01,0x21,0x21,0x0d,0x52,0x16,0x12,0xd5,0x01,0x21,0x21,0x0d,0x02,0x12,0x12,0x0d,0x88,0x80,0xdd,0xdd,0xdf,
0x88,0xdd,0xdd,0xd8,0x05,0x80,0xd0,0x12,0x12,0x10,0xd0,0x21,0x21,0x20,0xd5,0x12,0x62,0x1d,0x50,0x21,0x21,0x20,0xd0,0x12,0x12,0x10,0xd8,0x05,0x80,0xdd,0xdd,0xdf,
0x88,0x4d,0xdd,0xe4,0x58,0x10,0xdd,0x50,0x21,0x80,0xd8,0x23,0xa0,0xd9,0x36,0x39,0xd0,0xa3,0x28,0xd8,0x01,0x20,0xdd,0x50,0x18,0x5e,0xcd,0xdd,0xff,
0x88,0x4d,0xdd,0x5e,0xd8,0x80,0xd5,0x82,0x12,0x8d,0x02,0x51,0x52,0x0d,0x59,0x69,0x0d,0x02,0x51,0x52,0x0d,0x82,0x12,0x8d,0x80,0x58,0xdd,0xdd,0xdf,
0x88,0xcc,0xdd,0xe4,0xdd,0x85,0xe4,0x58,0x80,0x5e,0xd1,0x50,0x50,0xd5,0x62,0x02,0x58,0xd0,0x12,0x88,0xd5,0x12,0xd8,0x54,0x51,0x0d,0xd5,0x4d,0xdf,
0xa8,0x4d,0xd0,0xdd,0xd5,0x8d,0x58,0x0d,0x81,0x05,0x82,0x0d,0x01,0x01,0x20,0x20,0xdd,0x53,0xd0,0x50,0x5e,0xc5,0x85,0x06,0x05,0xec,0x58,0xdd,0x5e,0xc5,0x85,0xec,0xdd,0xff,
0xa7,0x4d,0xdd,0xdd,0x45,0x88,0x88,0x54,0x51,0xdd,0x80,0xd5,0x12,0x06,0x0a,0x0d,0x01,0x31,0x20,0x58,0xd0,0xd5,0x0d,0x0d,0x58,0x88,0x85,0xed,0xdd,0xdd,0xff,
0x76,0x4d,0xdd,0xe4,0x51,0x01,0x05,0xe4,0x58,0x31,0xdd,0x52,0x06,0x0d,0x02,0x82,0x0d,0x80,0xdd,0xdd,0x5f,
0x78,0xdd,0xdd,0x58,0x88,0xd0,0x51,0x58,0xd8,0x38,0x0d,0x52,0x32,0x0d,0x58,0x36,0xde,0x50,0x51,0xde,0x58,0x05,0xed,0xd5,0xff,
0xe7,0x4d,0xdd,0x88,0xdd,0x45,0x06,0x8d,0xdd,0x85,0x45,0x85,0x80,0x28,0x80,0xd5,0x09,0x95,0x02,0x05,0x8d,0x80,0xd0,0xd0,0x28,0xd5,0x88,0x8d,0x50,0x20,0x5e,0xdd,0xdd,0x0d,0x85,0xec,0xcc,0xcc,0xdd,0xff,
0xc7,0xdd,0xdd,0xdd,0xd8,0x88,0x05,0x80,0xd8,0x8d,0x05,0x80,0xd5,0x0d,0x50,0x20,0x20,0xd5,0x69,0x15,0x0a,0x20,0x5e,0x58,0x88,0x88,0x5e,0xd9,0xdd,0xdd,0xe4,0xdd,0xff,
0x97,0xcd,0xd5,0xed,0x50,0x10,0x5e,0x58,0x10,0x2d,0xe5,0x8a,0x10,0xdd,0xd0,0x1a,0x60,0x5c,0xd2,0x01,0x85,0xc4,0x50,0x10,0xd5,0xc4,0xdd,0x5f,
0x77,0x4d,0xde,0x45,0x8d,0x5e,0xd8,0x8d,0x58,0x30,0x10,0xd0,0x32,0x32,0x0d,0x50,0x12,0x10,0x54,0x56,0x8d,0x54,0xdd,0x5f,
0x86,0xdd,0xdd,0xd8,0x05,0x80,0xd0,0x29,0x12,0x0d,0x02,0x36,0x32,0x0d,0x02,0x91,0x20,0xd8,0x05,0x80,0xdd,0xdd,0xdf,
0xa6,0xdd,0xdd,0xdd,0x88,0x88,0x0d,0x83,0x01,0x03,0x8d,0x53,0x23,0x63,0x23,0xd5,0x83,0x01,0x03,0x8d,0x88,0x58,0x8d,0xdd,0xdd,0xdf,
0x76,0xc4,0xdd,0xe4,0xd5,0x8d,0x45,0x88,0x0d,0x53,0x85,0x0d,0x03,0x23,0x10,0xd8,0x68,0xdd,0xdd,0x5f,
0x96,0xdd,0x5e,0x56,0x8d,0xdd,0x58,0x20,0x58,0x0d,0x13,0x13,0x10,0x20,0xd8,0x20,0xdd,0xd5,0x80,0x5e,0x4d,0xd5,0xff,
0xa8,0xc4,0xdd,0xd5,0xec,0xd8,0x80,0xdd,0x58,0xd5,0x8d,0x80,0x58,0x05,0x0d,0x62,0xb3,0x10,0x50,0xd5,0x88,0x85,0x05,0x4d,0xd0,0xd8,0x5c,0xc5,0x88,0xdc,0xcd,0xdd,0xff,
0x77,0xdd,0xe5,0x85,0xe5,0x85,0xe5,0x8d,0xdd,0x1a,0x02,0x6d,0x81,0x01,0x0d,0x8d,0xdd,0xd5,0xff,
0x65,0xcd,0xde,0xd5,0x85,0xe5,0x02,0x16,0xd5,0x83,0x8d,0x83,0x8d,0xdd,0xdf,
0x67,0xdd,0xdd,0x88,0x0d,0x01,0x28,0xd5,0x12,0xdd,0x86,0x8d,0x01,0x25,0x0d,0x88,0x0d,0xdd,0xdf,
0x58,0xdd,0xd5,0x86,0x0d,0x05,0x20,0xd0,0x13,0x1d,0xd2,0x0d,0x83,0x0d,0x88,0xdd,0x85,0xcd,0xdf,
0x95,0xdd,0xde,0x58,0x8d,0xdd,0x80,0x20,0x28,0xdd,0x29,0x16,0x05,0xc5,0x8d,0xd5,0xcd,0xdf,
0x76,0xdd,0xdd,0x58,0x58,0xd5,0x03,0x52,0x1d,0x50,0x30,0x21,0x0d,0x06,0x88,0xd8,0x0d,0xdd,0xdd,0xdf,
0x88,0x4d,0xde,0x45,0x8d,0xd5,0x45,0x28,0x02,0x05,0x45,0x01,0x51,0x8d,0x50,0xd5,0x0d,0x50,0x21,0x51,0x05,0xe5,0x06,0x80,0x25,0xed,0xd5,0x85,0xec,0xcd,0xdf,
0xf7,0xdd,0xdd,0xdd,0xdd,0x58,0x58,0x58,0x58,0x58,0xd8,0x18,0x58,0x58,0x58,0xd0,0x25,0x83,0x85,0x85,0x8d,0x85,0x85,0x06,0x38,0x52,0x0d,0x85,0x85,0x85,0x81,0x8d,0x85,0x85,0x85,0x85,0x8d,0xdd,0xdd,0xdd,0xd5,0xff,
0xe7,0xcd,0xde,0x4d,0x8d,0xdd,0xd5,0xe4,0x58,0x88,0x88,0x05,0xe4,0x58,0xdd,0x50,0xd0,0xdd,0x50,0xd0,0x50,0x12,0x12,0x0d,0x02,0x62,0x85,0x88,0x8d,0x01,0x01,0x8d,0xdd,0xdd,0xdd,0xdf,
0x86,0xdd,0xdd,0xe5,0x88,0x85,0xe5,0x02,0x15,0x9d,0xd2,0x1a,0x60,0xd0,0x21,0x58,0x0d,0x80,0xdd,0xdd,0xdf,
0xc7,0xdd,0xd5,0x0d,0xdd,0x80,0x9d,0x58,0x0d,0x8d,0x15,0x88,0x0d,0x06,0xd2,0x50,0x28,0xd5,0x88,0x82,0x0d,0x5e,0x58,0x58,0x58,0x5e,0xdd,0xd5,0x85,0xec,0xcc,0xdd,0xff,
0x77,0xdd,0xe5,0x8d,0xde,0x59,0x18,0x5e,0x51,0xd8,0xd5,0x82,0x02,0x0d,0xd2,0x02,0x05,0xc5,0x68,0x05,0xcd,0xdd,0xff,
0x67,0x4d,0xde,0x45,0x8d,0x54,0x50,0x38,0x54,0x50,0x35,0x6d,0x50,0x38,0xd8,0x12,0xd5,0x88,0x5e,0xdd,0xdf,
0x77,0xdd,0xdd,0x58,0x86,0x0d,0x02,0x82,0x0d,0x50,0xd0,0xd5,0x02,0x50,0x25,0xe5,0x89,0x05,0xed,0x09,0x05,0xe4,0xdd,0xdf,
0x77,0xdd,0xe5,0x06,0xdd,0xe5,0x88,0x0d,0x50,0x15,0x18,0xd5,0xaa,0x0d,0x01,0x01,0xdd,0x88,0x5e,0xdd,0xdf,
0x87,0xdd,0xde,0x58,0x0d,0x5e,0x58,0x0d,0xde,0xd0,0x20,0x30,0xdd,0x25,0x91,0x0d,0x02,0x80,0x60,0xd8,0x0d,0x8d,0xdd,0xdd,0xff,
0x86,0xdd,0xdd,0xe5,0x80,0x18,0x5e,0x50,0x20,0x58,0xd5,0x0b,0x0b,0x0d,0x58,0x50,0x20,0x54,0x58,0x10,0x60,0x54,0xdd,0xdd,0xff,
0x87,0xdd,0xde,0x58,0x8d,0xe5,0x1a,0x10,0xde,0x50,0x1a,0x10,0xdd,0x01,0xa1,0x05,0x4d,0x01,0xa1,0x5c,0xd0,0x68,0x5c,0x4d,0xdd,0xff,
0xa8,0xcc,0xdd,0xe4,0xdd,0x8d,0xe4,0x58,0x50,0x30,0xde,0xd1,0x25,0x83,0x0d,0x58,0x06,0x03,0x03,0x0d,0x80,0x58,0x38,0xdd,0xd5,0x88,0x5c,0xcd,0x58,0xdc,0xcc,0xdd,0xff,
0x96,0xdd,0x8d,0xd5,0x8d,0xd8,0xd0,0xa8,0xa0,0xd0,0x12,0x92,0x10,0xd5,0x01,0x81,0x0d,0x4d,0x06,0x8d,0xec,0xdd,0xdf,
0xb7,0xcc,0xc4,0xdd,0x54,0xdd,0xd5,0x80,0xd5,0x80,0x95,0x02,0x0d,0x02,0x02,0x95,0x02,0x0d,0x02,0x05,0x92,0x02,0x0d,0x02,0x05,0x98,0x0d,0x50,0x60,0xdd,0xd5,0xed,0xd5,0xff,
0xa7,0xdd,0xdd,0xdd,0x83,0x13,0x13,0x8d,0x80,0x27,0x28,0x0d,0xd0,0xd5,0x0d,0x5c,0x58,0x28,0x05,0xec,0x58,0x58,0x05,0xec,0x58,0xdd,0x5e,0xcd,0xdf,
0x86,0xcd,0xd5,0xed,0x50,0x60,0xdd,0x0a,0xa2,0x0d,0x09,0x91,0x0d,0x80,0x58,0x0d,0xdd,0xdd,0xcc,0x5f,
0x77,0xdd,0xe5,0x80,0xd5,0xe5,0x01,0x21,0x05,0xe5,0x02,0x38,0x5e,0x45,0x83,0x20,0x54,0x50,0x12,0x10,0x54,0xd5,0x86,0x5c,0xcd,0xdf,
0x97,0xdd,0xe5,0x85,0xe5,0x85,0xe5,0x8d,0xdd,0xd1,0xa0,0x20,0x26,0xd8,0x10,0x10,0x10,0xd8,0xdd,0xdd,0xd5,0xff,
0x78,0xcd,0xde,0xd5,0x8d,0xd8,0x88,0xd0,0x20,0x20,0x2d,0x31,0x31,0x31,0xd0,0x20,0x20,0x2d,0x31,0x31,0x31,0xd0,0x68,0x8d,0xdd,0xd5,0xff,
0x86,0xdd,0xdd,0xe5,0x06,0x05,0x8d,0x58,0x35,0x21,0xdd,0x03,0x02,0x10,0xd5,0x88,0x85,0x4d,0x58,0x0d,0xcd,0xdd,0x5f,
0x77,0xcd,0xdd,0xcd,0x8d,0xd5,0x80,0xd5,0x81,0x32,0x0d,0x83,0x12,0x6d,0x58,0x0d,0xd5,0x8d,0xed,0xdd,0xff,
0x77,0xcd,0xdd,0x4d,0x58,0xdd,0x58,0x0d,0x58,0x13,0x20,0xd8,0x31,0x26,0xd5,0x80,0xd5,0x4d,0x85,0x05,0xcd,0xdd,0xff,
0x88,0xcc,0xdd,0x54,0xdd,0x80,0x54,0x58,0x02,0x8d,0x58,0x52,0xdd,0x03,0x01,0x85,0xe5,0x83,0x05,0x65,0xed,0x50,0x18,0x5e,0xc5,0x8d,0x5e,0xcd,0xdf,
0x76,0xdd,0xdd,0x58,0x88,0xd0,0x52,0x16,0x0d,0x82,0x1d,0xd0,0x52,0x15,0xe5,0x80,0xde,0xdd,0x5f,
0x86,0x4d,0xd5,0xe4,0x58,0x0d,0xd4,0x58,0x21,0x85,0x4d,0x02,0x18,0x5c,0xd2,0x1d,0x5c,0x45,0x60,0x5e,0xc4,0xdd,0xff,
0x67,0xcd,0xde,0xc5,0x85,0xec,0x58,0x5e,0xd5,0x21,0x5e,0x58,0x21,0xd5,0x05,0x21,0x0d,0x80,0x60,0xdd,0xdd,0xff,
0x97,0xdd,0x50,0xdd,0x58,0x0d,0x58,0xd8,0x8d,0x60,0xd5,0x88,0x52,0x15,0x4d,0x88,0x21,0xd0,0xd8,0x52,0x1d,0x50,0xd0,0x58,0xdd,0x0d,0xdd,0xff,
0x77,0xdd,0x5e,0x58,0x0d,0xd5,0x05,0x21,0x8d,0x81,0x25,0x6d,0xd2,0x18,0x5c,0x58,0xd5,0xc5,0x85,0xec,0xdd,0xff,
0x78,0xcd,0xdd,0xd5,0x88,0xd8,0x0d,0x0d,0x05,0x21,0x8d,0x65,0x12,0xdd,0x05,0x21,0xde,0x58,0x80,0x5e,0xd5,0x80,0x5e,0xcd,0xd5,0xff,
0x76,0xcd,0xdd,0xd5,0x88,0xd8,0x21,0x50,0xd6,0x51,0x28,0xd0,0x52,0x1d,0xd8,0x85,0xed,0xdd,0xff,
0x77,0xc4,0xdd,0xdd,0x58,0x0d,0x82,0x15,0x0d,0x65,0x12,0x8d,0x05,0x21,0xdd,0x05,0x85,0xe5,0x88,0x5e,0xdd,0xdf,
0x68,0xcd,0xde,0x4d,0x85,0xe4,0x50,0x10,0x5e,0x45,0x03,0x05,0xed,0x03,0xdd,0x82,0x05,0xe5,0x86,0x05,0xe5,0x8d,0x5e,0xdd,0xff,
0x78,0xdd,0xe5,0x8d,0xde,0x58,0x80,0x5e,0x58,0x15,0x05,0xed,0x53,0x50,0xd4,0x56,0x38,0x05,0x45,0x02,0x80,0x54,0xd5,0x8d,0xc4,0xdd,0xff,
0x57,0x4d,0xd5,0x45,0x01,0x05,0x45,0x03,0x0d,0x50,0x30,0xd8,0x30,0xd0,0x62,0x0d,0x8d,0xdd,0x5f,
0x78,0xdd,0xd0,0xd8,0x0d,0x0d,0x81,0x05,0xe5,0x82,0x0d,0xd5,0x03,0x06,0x0d,0xd2,0x05,0x05,0xc5,0x15,0x8d,0x05,0x80,0xd5,0x0d,0xdd,0xff,
0x78,0xdd,0x5e,0x58,0x0d,0xe5,0x05,0x10,0xdd,0x82,0x06,0x0d,0xd3,0x80,0xd8,0x20,0xdd,0x05,0x1d,0xe5,0x80,0x5e,0xdd,0x5f,
0x58,0xdd,0x5e,0x58,0x05,0xe5,0x01,0x05,0xe5,0x02,0x05,0xed,0x30,0xd5,0x02,0x8d,0x01,0x06,0xdd,0x85,0xcd,0xdf,
0x76,0xdd,0x5e,0x58,0x6d,0xd5,0x05,0xa8,0xd8,0x21,0x50,0xdd,0x98,0x5c,0xd8,0x05,0xc4,0xdd,0x5f,
0x76,0xc4,0xdd,0xed,0xd0,0x65,0xe5,0x8a,0x0d,0x50,0x52,0x18,0xd8,0x95,0x0d,0xd5,0x80,0x5c,0x4d,0xd5,0xff,
0x68,0x4d,0xd5,0xe4,0x58,0x05,0xe4,0x50,0x50,0x5e,0x45,0x06,0x05,0xed,0xad,0xd0,0x21,0x8d,0x09,0x50,0xdd,0x80,0x5c,0xdd,0x5f,
0x67,0xcd,0xd5,0xcd,0x8d,0xd8,0x0d,0x82,0x8d,0x01,0x31,0xdd,0x02,0x05,0xed,0x56,0x05,0xec,0xdd,0xff,
0x57,0xcd,0xd4,0xd8,0xdd,0x20,0xd0,0x13,0x1d,0x05,0x20,0xd8,0x60,0xd8,0x0d,0xdd,0x5f,
0x88,0xc4,0xdd,0x5e,0xc4,0x58,0x0d,0x4d,0x50,0x58,0xd5,0x82,0x05,0x0d,0x81,0x31,0x8d,0x05,0x02,0x8d,0x58,0x56,0xd5,0xed,0x80,0x5e,0x4d,0xd5,0xff,
0x86,0xd5,0x0d,0xdd,0xdd,0x80,0xdd,0x02,0x05,0x0d,0x06,0x13,0x18,0xd0,0x50,0x20,0xdd,0x80,0xdd,0xdd,0xd0,0xd5,0xff,
0x77,0xdd,0x5e,0x58,0x0d,0xe5,0x82,0x0d,0xed,0x23,0x10,0xd4,0x50,0x16,0x85,0x45,0x85,0x8d,0xdd,0x8d,0x58,0xdd,0xff,
0x77,0xdd,0x5e,0x58,0x0d,0xd5,0x05,0x62,0x8d,0x82,0x31,0x0d,0xd5,0x10,0xd4,0x58,0x85,0xe4,0x58,0x0d,0xe4,0xdd,0x5f,
0x97,0xcd,0xdd,0xdc,0x58,0x88,0xdd,0x0d,0xd0,0xd8,0x62,0x85,0x0d,0x82,0x31,0x05,0x0d,0x85,0x1d,0x50,0xd8,0x58,0x80,0xdd,0xdd,0xd5,0xff,
0x67,0xcd,0xd5,0x4d,0x80,0xdd,0x80,0xd8,0x30,0xd5,0x01,0x62,0xd5,0x83,0x0d,0xd8,0xde,0xdd,0x5f,
0x66,0x4d,0xde,0x45,0x8d,0xed,0x03,0x0d,0x50,0x16,0x20,0xd8,0x38,0xd8,0x58,0xdd,0xdd,0xff,
0x66,0xcd,0xd5,0x4d,0x80,0xd5,0x03,0x8d,0x01,0x62,0xd5,0x83,0x8d,0xd8,0x0d,0xdd,0xdf,
0x78,0x4d,0xd5,0xe4,0x58,0x0d,0xed,0x05,0x8d,0x50,0x30,0x58,0xd1,0x62,0x05,0x0d,0x03,0x85,0x0d,0xd8,0x85,0xc5,0x8d,0x5c,0xdd,0xff,
0x77,0xcd,0xde,0xc5,0x85,0xed,0x58,0xdd,0x50,0x23,0x8d,0x83,0x10,0x6d,0x80,0xdd,0x58,0xde,0xdd,0x5f,
0x86,0xdd,0x5e,0x58,0x0d,0xdd,0x80,0x58,0x0d,0x50,0x23,0x68,0x54,0x50,0x31,0x8d,0x45,0x8d,0xde,0x4d,0xdf,
0x77,0xcd,0xde,0xc5,0x60,0x5e,0xc5,0x8d,0xed,0x52,0x30,0xd5,0x83,0x18,0xd8,0x88,0xdd,0xd8,0x5c,0xcd,0xdf,
0x87,0xcc,0x4d,0xdd,0xdd,0x8d,0x8d,0x80,0xd8,0x02,0x38,0xd8,0x53,0x10,0xdd,0x86,0x0d,0xe4,0x58,0xd5,0xe4,0xdd,0xff,
0x75,0xdd,0x0d,0xd6,0x0d,0x50,0xd0,0xa0,0xdd,0x02,0x01,0x8d,0x50,0x98,0x54,0xdd,0xd5,0xff,
0x68,0xdd,0xe5,0x85,0xe5,0x60,0xd5,0xe5,0x0a,0x0d,0x50,0x20,0x10,0xdd,0x90,0x54,0x58,0x0d,0x45,0x80,0x5e,0x4d,0xd5,0xff,
0x66,0xdd,0xde,0x58,0x85,0xe5,0x88,0x5e,0xd0,0xad,0x45,0x02,0x61,0x54,0xd0,0x95,0xcd,0xd5,0xff,
0x65,0xcd,0xdd,0xd8,0x0d,0x0a,0x50,0xd0,0x26,0x10,0xd8,0x90,0xdd,0xdd,0xff,
0x75,0xc4,0xdd,0xdd,0x56,0x8d,0x82,0x31,0x0d,0x88,0x0d,0x58,0xdd,0xdd,0x5f,
0xa6,0xcc,0xcd,0xd5,0xc4,0xdd,0x80,0xdd,0x58,0x23,0x10,0xd8,0x23,0x18,0x0d,0x50,0x68,0x0d,0xdd,0x8d,0xde,0xdd,0xff,
0x76,0xdd,0xdd,0x58,0x58,0x0d,0x0a,0x31,0x0d,0x01,0x81,0x0d,0x01,0x3a,0x6d,0x80,0x58,0xdd,0xdd,0x5f,
0x85,0xdd,0xdd,0xd8,0x06,0x80,0xd1,0xa1,0xa1,0xd2,0x92,0x92,0xd8,0x05,0x80,0xdd,0xdd,0xdf,
0xe6,0xcc,0xcc,0xdd,0xe4,0xdd,0xd0,0x58,0x5e,0x45,0x88,0xd5,0x20,0xde,0x4d,0x06,0x09,0x10,0x20,0xde,0xcd,0x02,0xd5,0x88,0xdc,0x45,0x85,0x05,0x88,0x05,0xc4,0xdd,0x0d,0xdd,0x5f,
0xf7,0xdd,0xd5,0x8d,0xde,0x58,0x80,0x58,0x58,0x5e,0xd0,0x28,0xdd,0x20,0xde,0x4d,0x02,0x09,0x90,0x20,0xde,0xcd,0x8d,0xd8,0x60,0xdc,0x45,0x85,0x85,0x88,0x05,0xc4,0xdd,0x85,0x8d,0xdc,0xcc,0xc4,0xdd,0xff,
0x77,0xdd,0xdd,0x50,0x18,0x10,0xd1,0xaa,0x1d,0x02,0x92,0x0d,0x02,0x17,0x20,0xd1,0xaa,0x1d,0x01,0x81,0x0d,0xdd,0xd5,0xff,
0x67,0xdd,0xdd,0x85,0x06,0xd0,0x21,0x20,0xd0,0x12,0x10,0xd0,0x12,0x10,0xd0,0x21,0x20,0xd8,0x58,0xdd,0xdd,0xff,
0x68,0xdd,0xdd,0x86,0x8d,0x02,0x02,0x0d,0x51,0x31,0xdd,0x80,0xd5,0x02,0x12,0x0d,0x01,0x21,0x0d,0x85,0x8d,0xdd,0xdf,
0x68,0x4d,0xdd,0x45,0x06,0x85,0x45,0x03,0x20,0x54,0x50,0x1d,0xd5,0x0a,0x0d,0x89,0x0d,0x80,0xdd,0x8d,0xed,0xd5,0xff,
0x78,0xcd,0xdd,0xc5,0x06,0x8d,0xd2,0x18,0xd0,0x10,0x2d,0xd0,0x52,0x10,0x5e,0x50,0x50,0x50,0x5e,0x58,0x80,0x5e,0xd8,0x0d,0xe4,0xdd,0x5f,
0xa6,0x4d,0xdd,0xde,0xd8,0x58,0xd5,0xed,0x12,0x58,0x30,0xd5,0x80,0x60,0x30,0x30,0xd8,0x0d,0x88,0xdd,0xd5,0x80,0xdc,0xc4,0xdd,0x5f,
0x86,0xcc,0xdd,0xdd,0xd8,0x0d,0x50,0x1b,0x60,0xd8,0x28,0x0d,0x50,0xd0,0xdd,0x58,0x85,0xed,0xdd,0xff,
0x67,0xdd,0x5e,0x58,0x0d,0xd8,0x68,0xd5,0x23,0x51,0x54,0x58,0xa5,0x45,0x09,0x05,0x45,0x83,0x05,0x4d,0xdd,0xff,
0x98,0xcd,0xd5,0xe4,0xd8,0xdd,0x54,0xd8,0x88,0x54,0x50,0x1b,0x28,0xd5,0x05,0x85,0x6d,0x58,0x2b,0x10,0x5e,0x58,0x88,0xde,0xdd,0x58,0xde,0xc4,0xdd,0x5f,
0x77,0x4d,0xd5,0xed,0x58,0xde,0x58,0x28,0xd5,0x65,0x25,0x0d,0x50,0x12,0x10,0x1d,0xd8,0x85,0x4d,0x8d,0x5c,0xdd,0x5f,
0x76,0x4d,0xd5,0xe4,0x58,0x05,0xed,0x80,0xdd,0x0b,0x90,0xd8,0x20,0x26,0xd8,0xd8,0xdd,0xdd,0x5f,
0x78,0x4d,0xd5,0xed,0x58,0x5e,0xd0,0x30,0xdd,0x82,0x8d,0x56,0x52,0x50,0xd5,0x01,0x21,0x01,0xdd,0x88,0x5c,0x58,0xd5,0xcd,0xd5,0xff,
0x86,0x4d,0xdd,0x5e,0x45,0x81,0x85,0xe4,0x58,0x25,0x05,0xed,0x5b,0x60,0xd4,0x58,0x25,0x05,0xe4,0x58,0x18,0x5e,0x4d,0xdd,0x5f,
0xe7,0xcc,0xc4,0xdd,0xdd,0xdd,0xdd,0x58,0x0d,0xd5,0x09,0x98,0x05,0x80,0xd8,0x56,0xd5,0x88,0x50,0xd0,0xaa,0x05,0x05,0x88,0xd8,0x88,0x58,0x05,0x0d,0xdd,0xdd,0xd8,0x0d,0xcc,0xc4,0xdd,0xdd,0xff,
0x78,0xc4,0xdd,0x5c,0x45,0x80,0xdd,0x58,0x0d,0x89,0x2d,0x58,0x92,0x0d,0x52,0x56,0x50,0xd0,0x28,0x8d,0x80,0xdd,0xdd,0x5f,
0x97,0xcc,0x4d,0xd5,0xcd,0xd8,0x05,0xc5,0x80,0x28,0xdd,0x85,0x2d,0xd8,0x30,0x18,0x5e,0x58,0x03,0x05,0x65,0xed,0xd5,0x18,0x5e,0xcc,0xdd,0x5f,
0xa8,0xcc,0x4d,0xd5,0xe4,0xdd,0x58,0x05,0xe4,0x58,0x50,0x25,0x0d,0xd0,0xb8,0x38,0xd8,0x31,0x65,0x80,0xd8,0xb0,0x58,0x0d,0x58,0x0d,0xdd,0x45,0x80,0x5e,0x4d,0xd5,0xff,
0xc8,0xcd,0xde,0x4d,0x8d,0xdd,0x5e,0xd8,0x30,0x20,0x58,0x5e,0x58,0x30,0x38,0xb0,0xd5,0x88,0x05,0x61,0x38,0xdd,0x8d,0x0b,0x85,0xcd,0xdd,0x80,0xdc,0xcc,0x45,0x80,0x5e,0xcc,0xc4,0xdd,0x5f,
0x77,0x4d,0xde,0xd8,0xd5,0xe5,0x81,0x8d,0x58,0x15,0x8d,0x02,0x3a,0x0d,0xd1,0x8d,0xc5,0x86,0x5e,0xcd,0xd5,0xff,
0x88,0xdd,0xdd,0xd8,0x05,0x80,0xd0,0x50,0x50,0x50,0xd8,0x32,0x38,0xdd,0x16,0x1d,0xd8,0x32,0x38,0xd0,0x50,0x50,0x50,0xd8,0x88,0x0d,0xdd,0xdd,0xff,
0x87,0x4d,0xde,0xd8,0xdd,0xd8,0x30,0x18,0xd8,0x21,0x25,0x0d,0x83,0x03,0x60,0xd5,0x02,0x12,0x10,0xdd,0x85,0x8d,0xdd,0xdd,0xff,
0x88,0x4d,0xdd,0x5e,0x58,0x01,0x80,0xd0,0x52,0x52,0x50,0xd0,0x21,0x01,0x20,0xd1,0x58,0x05,0x1d,0x02,0x10,0x12,0x0d,0x05,0x25,0x25,0x0d,0x80,0x78,0x05,0x4d,0xdd,0x5f,
0x88,0xcd,0xd5,0xe4,0xd0,0x10,0xde,0xd1,0x20,0x21,0xd5,0x02,0x03,0x02,0x0d,0x10,0x36,0x30,0x1d,0x02,0x03,0x02,0x0d,0x51,0x20,0x21,0xd4,0xd0,0x10,0xde,0xcd,0xd5,0xff,
0x88,0x4d,0xdd,0x5e,0xd8,0x80,0xd5,0x02,0x12,0x12,0x0d,0x01,0x21,0x21,0x0d,0x02,0x16,0x12,0x0d,0x01,0x21,0x21,0x0d,0x02,0x12,0x12,0x0d,0x58,0x80,0xd4,0xdd,0xd5,0xff,
0xb6,0xcc,0xcc,0xdd,0xdd,0xdd,0x58,0xd8,0x88,0x10,0x10,0xd0,0xa2,0x80,0x58,0xdd,0x0d,0xd0,0x10,0x5c,0x56,0x88,0x0d,0x5c,0xdd,0xdd,0xff,
0xc7,0xc4,0xdd,0x8d,0xdd,0xd8,0xdd,0x8d,0x80,0x28,0x09,0x10,0xd8,0x20,0x28,0x05,0x8d,0xd5,0x0d,0xd0,0x10,0x5c,0x50,0x28,0x68,0xd5,0xc5,0x80,0xdd,0x5e,0xcd,0xd5,0xff,
0x68,0xdd,0xdd,0xd8,0x0d,0x51,0x21,0x0d,0x02,0x12,0xd5,0x01,0x21,0x0d,0x02,0x12,0x0d,0x58,0x06,0xdd,0xdd,0xdd,0xd5,0xff,
0x68,0xdd,0xdd,0x58,0x8d,0x51,0x21,0x0d,0x02,0x12,0x0d,0x01,0x21,0xd5,0x02,0x12,0x0d,0x58,0x06,0xdd,0x8d,0xdd,0xd5,0xff,
0x68,0xdd,0xdd,0x58,0x8d,0x51,0x21,0x0d,0x02,0x12,0xd5,0x01,0x21,0xd5,0x02,0x12,0x0d,0x58,0x06,0xdd,0x58,0xdd,0xdd,0xff,
0x68,0xdd,0xdd,0xd8,0x0d,0x51,0x21,0x0d,0x02,0x12,0xd5,0x01,0x21,0xd5,0x02,0x12,0x0d,0x58,0x06,0xd5,0x8d,0xdd,0xdd,0xff,
0xa8,0x4d,0xdd,0xd5,0xed,0x85,0x8d,0xdd,0x12,0x58,0x38,0xd8,0x06,0x03,0x03,0x0d,0x80,0x58,0x38,0xdd,0xd5,0x30,0xd5,0xcc,0xd8,0x0d,0xcc,0xd8,0x0d,0xcc,0x4d,0xd5,0xff,
0xf8,0xdd,0xdd,0x5e,0xd5,0x88,0xd8,0xdd,0xe5,0x88,0x30,0xd8,0x58,0x5e,0x50,0xbb,0x8d,0xd2,0x1d,0x58,0x36,0x38,0x88,0x21,0x0d,0x8b,0xb0,0xdd,0x80,0xd5,0x03,0x88,0x58,0xdd,0xd5,0x88,0xd5,0xed,0xdd,0xd5,0xff,
0xa8,0xcd,0xdd,0x5e,0xd5,0x85,0x8d,0xd8,0x02,0x32,0x80,0xd0,0x50,0x12,0x10,0x50,0xd0,0x52,0x17,0x12,0x50,0xd0,0x50,0x12,0x10,0x50,0xd8,0x03,0x23,0x80,0xdd,0x85,0x8d,0x5c,0xdd,0xd5,0xff,
0xa8,0xcd,0xdd,0x5e,0xd5,0x85,0x8d,0xd8,0x0b,0x20,0x20,0xd0,0x50,0x12,0x18,0x0d,0x0d,0x17,0x0d,0x0d,0x80,0x12,0x10,0x50,0xd0,0x20,0xb2,0x80,0xdd,0x85,0x8d,0x5c,0xdd,0xd5,0xff,
0x88,0xdd,0xdd,0xe5,0x80,0x58,0x5e,0x58,0x23,0x20,0x5e,0x58,0x12,0x10,0x5e,0xd5,0x18,0xd5,0x45,0x01,0x61,0x85,0x45,0x02,0x32,0x85,0x45,0x85,0x80,0x54,0xdd,0xdd,0xff,
0x88,0x4d,0xdd,0x5e,0x45,0x88,0x05,0xed,0x0b,0x20,0xd5,0x02,0x12,0x18,0xd0,0x51,0x61,0x50,0xd8,0x12,0x12,0x0d,0x50,0xb2,0x0d,0x45,0x88,0x05,0xe4,0xdd,0xd5,0xff,
0x88,0xdd,0xd5,0xe5,0x85,0x85,0xe5,0x12,0x52,0x1d,0xd0,0x30,0x38,0x0d,0x81,0x82,0x0d,0x50,0x30,0xdd,0x58,0x30,0x5e,0x58,0x6d,0xed,0xd5,0xff,
0xe8,0xcc,0xc4,0x5e,0x4d,0xdd,0xdd,0xd5,0xe4,0x58,0x18,0x80,0x18,0x5e,0x45,0x01,0x21,0xa2,0x12,0x10,0x5e,0xd1,0xa2,0x13,0x1a,0x21,0xd4,0x50,0x12,0x1a,0x21,0x21,0x05,0xe4,0x56,0x01,0x88,0x01,0x85,0xe4,0xdd,0xdd,0xdd,0x5e,0xcc,0xc4,0x5f,
0xe8,0xcc,0xc5,0x05,0xe4,0xdd,0xdd,0xdd,0x5e,0x45,0x88,0x12,0x18,0x85,0xed,0x12,0x82,0x12,0x82,0x1d,0x45,0x21,0xb3,0x0b,0x31,0x25,0xed,0x12,0x82,0x12,0x82,0x1d,0x45,0x68,0x01,0x21,0x88,0x5e,0x4d,0xdd,0xdd,0xd5,0xec,0xcc,0x50,0x5f,
0xe8,0xcc,0xcd,0x5e,0x4d,0xdd,0xdd,0xd5,0xe4,0x58,0x21,0x80,0x12,0x85,0xed,0x83,0x01,0x21,0x03,0x8d,0xd8,0x21,0x23,0x21,0x28,0xdd,0x83,0x01,0x21,0x03,0x8d,0x45,0x60,0x21,0x80,0x12,0x85,0xe4,0xdd,0xdd,0xdd,0x5e,0xcc,0xcd,0x5f,
0xe8,0xcc,0x45,0x05,0x05,0xe4,0xdd,0xdd,0xdd,0x5e,0x45,0x02,0x88,0x80,0x10,0x5e,0x45,0x01,0xb8,0x0b,0x20,0x5e,0xd0,0x38,0xb3,0x83,0x0d,0x45,0x02,0xb8,0x0b,0x10,0x5e,0x45,0x61,0x88,0x80,0x20,0x5e,0x4d,0xdd,0xdd,0xd5,0xec,0xc4,0x50,0x50,0x5f,
0xe8,0xcc,0x4d,0x0d,0xe4,0xdd,0xdd,0xdd,0x5e,0xd8,0x01,0x80,0x18,0x0d,0xd0,0xa3,0xa2,0x3a,0x0d,0x45,0x99,0x13,0x99,0x15,0xed,0x0a,0x3a,0x23,0xa0,0xdd,0x68,0x18,0x01,0x80,0xd4,0xdd,0xdd,0xdd,0x5e,0xcc,0x4d,0x0d,0xff,
0xe8,0xc4,0xd5,0x05,0x0d,0x5e,0x4d,0xdd,0xdd,0xd5,0xe4,0x58,0x80,0x18,0x80,0x5e,0xd0,0x12,0x0a,0x21,0x21,0x0d,0xd3,0x21,0x29,0x13,0x12,0x3d,0xd0,0x12,0x1a,0x20,0x21,0x0d,0x45,0x68,0x81,0x88,0x05,0xe4,0xdd,0xdd,0xdd,0x5e,0xc4,0xd5,0x05,0x0d,0x5f,
0xe8,0xc5,0x05,0x05,0x05,0x05,0x05,0xe4,0xdd,0xdd,0xdd,0x5e,0xd8,0x18,0x18,0x18,0xd4,0x50,0xa3,0x0a,0x30,0x20,0x5e,0xd1,0x31,0x30,0x30,0x31,0x31,0xd4,0x50,0x20,0x3a,0x03,0xa0,0x5e,0xd6,0x01,0x81,0x81,0x8d,0x4d,0xdd,0xdd,0xd5,0xec,0x50,0x50,0x50,0x50,0x50,0x5f,
0xe8,0xcd,0x0d,0x0d,0x0d,0xe4,0xdd,0xdd,0xdd,0x5e,0xd8,0x10,0x10,0x10,0x18,0xdd,0x02,0x12,0x12,0x12,0x12,0x0d,0x45,0x3a,0x20,0x30,0xa2,0x35,0xed,0x02,0x12,0x12,0x12,0x12,0x0d,0xd6,0x01,0x01,0x01,0x01,0x8d,0x4d,0xdd,0xdd,0xd5,0xec,0xd0,0xd0,0xd0,0xdf,
0x88,0x4d,0x0d,0xdd,0x50,0xd0,0x10,0xd0,0xd0,0x21,0x05,0x4d,0x02,0x80,0xd5,0x02,0x60,0xdd,0x02,0x8d,0xe5,0x90,0xd0,0xd5,0x80,0x50,0xde,0xdd,0x50,0x5f,
0x88,0xdd,0xdd,0xd1,0x01,0x88,0xd1,0x21,0x01,0x8d,0x50,0xd5,0x60,0x54,0x58,0x28,0xd4,0x50,0xa0,0xde,0x45,0x82,0x05,0xe4,0x58,0xd5,0xe4,0xdd,0xff,
0xa8,0xcd,0xde,0xd5,0x8d,0xde,0x58,0x06,0x80,0xde,0x50,0x51,0x01,0x51,0xdd,0x0a,0x20,0xa2,0x0d,0xd1,0x51,0x51,0x50,0x54,0xd8,0x88,0x05,0xcd,0xd8,0xd5,0xcc,0x4d,0xdf,
0x97,0x4d,0xdd,0x5e,0xd8,0x80,0x50,0xd8,0x31,0x21,0x5e,0x58,0x31,0x51,0xdd,0x05,0x26,0xa8,0xd8,0x0d,0x05,0x0d,0xdd,0x58,0x05,0xcc,0x4d,0xd5,0xff,
0x87,0xcc,0x4d,0xdc,0xc4,0x58,0xdd,0xd5,0x21,0xd8,0x02,0x02,0x1d,0x02,0x62,0x91,0xd0,0xa2,0x9d,0x58,0x20,0x95,0xed,0xdd,0xdf,
0xe5,0xdd,0x50,0xdd,0xdd,0xe5,0x80,0xd5,0x01,0x02,0x85,0xe5,0x80,0x20,0x39,0x05,0x20,0xdd,0x02,0x50,0x93,0x02,0x86,0x54,0x58,0x20,0x10,0xd5,0x80,0x54,0xdd,0xdd,0x0d,0xd5,0xff,
0xc6,0x4d,0xd5,0x8d,0xd5,0x45,0x80,0xdd,0x80,0xd5,0x05,0x21,0x31,0x20,0x50,0xd8,0x02,0x16,0x12,0x80,0xd0,0x50,0x21,0x31,0x25,0x0d,0x58,0x0d,0xd8,0x05,0xed,0xd5,0x8d,0xd5,0xff,
0xe8,0xcc,0xcc,0xcd,0xd5,0xcd,0xdd,0xd5,0x80,0xdd,0x02,0x02,0x02,0x02,0x18,0xd8,0x12,0x12,0x02,0x12,0x15,0x0d,0x05,0x13,0x96,0x93,0x15,0x0d,0x05,0x12,0x12,0x02,0x12,0x18,0xd8,0x12,0x02,0x02,0x02,0x0d,0xd8,0x0d,0xdd,0xd5,0xed,0xd5,0xff,
0x98,0xcc,0x4d,0xdd,0xdd,0x58,0x0d,0x82,0x88,0x0d,0x82,0xd5,0x0d,0xd1,0x21,0x01,0x01,0x54,0x50,0x25,0x88,0x54,0x50,0x6d,0xdd,0x45,0x85,0xe4,0xdd,0xff,
0x88,0xcc,0xdd,0x54,0xdd,0x80,0x54,0x50,0x60,0x25,0x05,0x45,0x05,0x99,0xd5,0x20,0x20,0x20,0xd8,0xd5,0x0d,0x58,0x88,0x5e,0xdd,0x58,0x5e,0xcc,0xdd,0xff,
0xb8,0xdd,0xdd,0xd5,0xe5,0x68,0x58,0x58,0x5e,0x58,0x25,0x28,0x02,0x5e,0xd8,0x59,0x58,0x5e,0x45,0x85,0x95,0x85,0xe4,0x58,0x59,0x58,0xd4,0x52,0x80,0x25,0x28,0x54,0x58,0x58,0x58,0x05,0x4d,0xdd,0xdd,0x5f,
0xc8,0xcd,0xdd,0xd5,0xe4,0xd8,0x05,0x80,0x5e,0xd0,0x25,0x05,0x05,0x2d,0xd8,0x05,0x10,0x15,0x80,0xd0,0x20,0x31,0x61,0x30,0x20,0xd8,0x05,0x10,0x15,0x80,0xdd,0x25,0x05,0x05,0x20,0xdc,0x58,0x05,0x80,0xde,0xcd,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x58,0x6d,0xd5,0x82,0x18,0xdd,0x21,0x50,0xd8,0x21,0x50,0xd0,0x52,0x18,0xd8,0x8d,0xdd,0xd5,0xff,
0x98,0xdd,0x0d,0xde,0x58,0xd5,0x85,0xe5,0x85,0x0a,0x05,0xe5,0x0a,0x05,0x85,0xe5,0x88,0x58,0xdd,0x50,0x21,0x58,0x5c,0x59,0x31,0x61,0x5c,0xd8,0x0d,0x5c,0x4d,0xd5,0xff,
0x88,0xcc,0xdd,0x54,0xdd,0x80,0x54,0x58,0xa5,0x0d,0x50,0x39,0x20,0xd6,0x01,0x51,0x8d,0x02,0x93,0x0d,0x50,0x5a,0x85,0xe5,0x80,0xdd,0xed,0xd5,0xff,
0xa8,0xdd,0xd5,0xe5,0x88,0x0d,0xde,0x50,0x50,0x50,0x18,0xd5,0x0a,0x2b,0xa0,0xd9,0x96,0x99,0xd0,0xab,0xa2,0x0d,0x58,0x10,0x50,0x50,0x54,0xdd,0x88,0x05,0xcc,0xdd,0xd5,0xff,
0xb8,0xcd,0xdd,0xde,0xc5,0x05,0x80,0xde,0xdd,0x50,0x50,0xdd,0x50,0x20,0xa0,0x20,0x20,0xd9,0x99,0x99,0xd0,0x20,0x20,0xa0,0x20,0xdd,0x50,0x50,0xdd,0x5c,0xd0,0x60,0x50,0x5e,0xcd,0xdd,0xdf,
0xe8,0x4d,0xd5,0xed,0x80,0xd0,0xdd,0xe5,0x85,0x85,0x05,0x85,0xe5,0x03,0x23,0x0d,0x52,0x0d,0xe5,0x01,0x21,0x09,0x10,0x20,0xde,0x50,0x32,0x30,0xd5,0x88,0xd5,0x85,0x85,0x05,0x88,0x6d,0x58,0x0d,0x0d,0xdd,0x54,0xdd,0x5f,
0x96,0xdd,0xdd,0xd5,0x80,0x58,0x8d,0x05,0xaa,0x20,0xd8,0x15,0x15,0x8d,0x89,0x18,0xdd,0x50,0x60,0xd5,0xec,0xdd,0x5f,
0x97,0x4d,0xdd,0xde,0xd8,0x88,0xd5,0x83,0x93,0x8d,0x05,0x28,0x25,0x6d,0x8b,0xb8,0xd5,0x88,0x0d,0x54,0xd5,0x8d,0xec,0x4d,0xdf,
0x96,0xcd,0xdd,0x5e,0xd5,0x85,0x85,0xe5,0x81,0xa1,0x0d,0x58,0x38,0x36,0x0d,0x50,0x1a,0x18,0x54,0x58,0x58,0xd5,0x4d,0xdd,0x5f,
0xc8,0xcc,0xcd,0xde,0xcd,0xd5,0x8d,0xd4,0xd8,0x05,0x82,0x85,0x45,0x01,0x50,0x50,0x53,0x8d,0x50,0x38,0x68,0x30,0xd5,0x83,0x50,0x50,0x51,0x05,0xe5,0x82,0x85,0x80,0xde,0xdd,0x8d,0xd5,0xec,0x4d,0xdf,
0xc6,0xcd,0xdd,0xde,0xc5,0x88,0x85,0xed,0x50,0xd0,0x50,0xdd,0x58,0x31,0xb0,0x13,0x8d,0x82,0x80,0x25,0x06,0x0d,0xdd,0xd8,0x0d,0x5c,0xcc,0xdd,0x5f,
0xa8,0xdd,0xdd,0xdd,0x88,0x68,0x8d,0x0d,0x52,0xd5,0x0d,0x05,0x01,0x21,0x05,0x0d,0x05,0x20,0x10,0x25,0x0d,0x82,0x10,0x12,0x8d,0xd2,0x10,0x12,0xd5,0xc5,0x81,0x85,0xec,0xdd,0xd5,0xff,
0xa8,0xcc,0xc4,0xdd,0xcd,0xdd,0x85,0xc5,0x88,0x52,0x15,0x4d,0x0d,0x05,0x85,0x45,0x02,0x0a,0xa0,0xd5,0x13,0x13,0x13,0x9d,0x88,0x06,0x80,0xd8,0x0d,0xdd,0xdd,0xdf,
0xe8,0xcc,0xdd,0xec,0x4d,0x8d,0xdd,0x5e,0xcd,0x83,0x02,0x05,0x85,0xe4,0xd8,0x30,0x38,0xb0,0xdd,0x83,0x03,0x05,0x61,0x38,0xd8,0x30,0x30,0xd0,0xb8,0xd8,0x80,0xdd,0x80,0xdd,0x58,0xd8,0x58,0x05,0xec,0xdd,0x80,0xdd,0x5f,
0x88,0xdd,0xdd,0xd8,0x05,0x80,0xd0,0x50,0x58,0x0d,0x01,0x29,0x2d,0x58,0x29,0x20,0xdd,0x25,0x65,0x05,0x45,0x02,0x18,0x05,0x45,0x80,0xdd,0x4d,0xd5,0xff,
0xb7,0xcd,0xdd,0xde,0xc5,0x68,0x58,0xd5,0xc5,0x02,0x82,0x80,0xdd,0x52,0xd2,0xd0,0xd0,0x13,0x01,0x30,0x13,0x1d,0x88,0x88,0x8d,0x58,0x58,0x58,0xd4,0xdd,0xdd,0xdf,
0x88,0xdd,0xdd,0xd8,0x58,0x05,0xe5,0x12,0x32,0x51,0xd5,0x81,0x20,0x20,0xd5,0x09,0x18,0xd0,0x28,0x20,0xd5,0x02,0xd5,0x15,0xe5,0x80,0x68,0xdd,0xdd,0xd5,0xff,
0x87,0xcd,0xde,0xc5,0x8d,0x5e,0xd5,0x01,0x8d,0x58,0x01,0x58,0xd0,0xa3,0xa0,0xdd,0x01,0x8d,0xc5,0x01,0x06,0x5e,0xcd,0xdd,0xff,
0x86,0xdd,0xdd,0xd0,0x20,0x18,0x0d,0x80,0x58,0x0d,0xb3,0x0b,0x3d,0x80,0x50,0x60,0xd8,0x12,0x12,0x0d,0xdd,0xdd,0xff,
0x88,0xc4,0xdd,0xec,0x45,0x8d,0xdd,0x52,0x18,0xd8,0x03,0x01,0x0d,0x65,0x15,0x25,0x0d,0x02,0x03,0x80,0xd8,0x12,0xdd,0xd5,0x85,0xec,0xdd,0xff,
0x98,0xc4,0xdd,0xd5,0xcd,0x88,0x0d,0xd0,0x1d,0x50,0xd0,0x20,0x28,0x50,0xd6,0x31,0x29,0x8d,0x02,0x02,0x8d,0xdd,0x05,0x10,0x5e,0xc5,0x80,0xde,0xcd,0xd5,0xff,
0x67,0xdd,0xde,0x50,0x30,0x15,0xe5,0x18,0x25,0xe5,0x15,0x21,0x5e,0x58,0x02,0xdd,0x60,0x20,0x54,0x58,0x85,0x4d,0xdd,0xff,
0x87,0xcc,0xdd,0xdd,0xd0,0x60,0xd8,0x28,0x20,0xd8,0xbb,0x1d,0x81,0x05,0x8d,0x8d,0x50,0xdd,0x88,0x05,0xe4,0xdd,0xd5,0xff,
0xb8,0xdd,0xde,0x58,0x8d,0xdd,0xd0,0xd0,0x20,0x20,0x20,0xd8,0x10,0x50,0x50,0x50,0xdd,0x92,0x86,0x85,0xc5,0x95,0x0d,0xd5,0xcd,0x05,0x25,0xec,0x45,0x80,0x5e,0xc4,0xdd,0x5f,
0xa8,0xc4,0xdd,0xec,0xd8,0xdd,0xdd,0x86,0x05,0x8d,0x02,0x32,0x12,0x32,0x0d,0x81,0x01,0x01,0x8d,0x50,0x12,0x32,0x10,0xd4,0xd8,0x58,0xde,0xcd,0xd8,0x5e,0xc4,0xdd,0xdf,
0xa8,0xcc,0xdd,0x5e,0xdd,0x58,0x0d,0xe5,0x80,0x50,0x52,0x05,0xe5,0x05,0x83,0x18,0xd5,0x02,0x31,0x61,0x32,0x0d,0x58,0x13,0x85,0x05,0x45,0x02,0x50,0x58,0x05,0x4d,0x80,0xdd,0x5c,0xdd,0x5f,
0x87,0xdd,0xe5,0x8d,0xde,0x58,0x58,0xde,0x51,0x23,0x21,0x05,0xe5,0x88,0x8d,0x50,0x12,0x32,0x16,0xd5,0x85,0x80,0x54,0xdd,0xdd,0xff,
0xa8,0xcc,0x4d,0xde,0xcc,0x45,0x85,0xec,0xdd,0x20,0x5e,0xd5,0x01,0x01,0x0d,0xd0,0x23,0x07,0x23,0x8d,0x81,0x01,0x01,0x50,0xd5,0x02,0x50,0xa8,0x54,0xd8,0x05,0x8d,0xcd,0xdd,0xdf,
0x78,0xc4,0xdd,0xdd,0x50,0x60,0xd0,0x28,0x50,0xd1,0x01,0x25,0x0d,0x15,0x01,0x50,0xd8,0x12,0x50,0xd5,0x20,0x28,0x54,0x58,0xdd,0x4d,0xdf,
0x88,0xcc,0x4d,0xd4,0xdd,0x58,0xd5,0x82,0x03,0x0d,0x81,0x21,0x20,0xd0,0x10,0x30,0x36,0xd5,0x01,0x21,0x21,0x54,0x58,0x20,0x30,0x54,0xd8,0x58,0x5c,0xdd,0xd5,0xff,
0xf7,0xdd,0xdd,0x8d,0xdd,0xd5,0x88,0xdd,0x58,0x0d,0x80,0xd8,0xd5,0x02,0x8d,0x06,0x80,0x50,0xd0,0x28,0xdd,0x0d,0x09,0x93,0x8d,0xe5,0x02,0x80,0x2d,0x58,0xde,0x58,0x05,0x8d,0xdd,0xed,0xdd,0xd8,0xdf,
0xa8,0xc4,0xdd,0xe4,0xd5,0x8d,0x5e,0x45,0x80,0x38,0xdd,0x58,0x21,0x28,0x0d,0x03,0x13,0x63,0x13,0x0d,0x80,0x21,0x28,0xdd,0x58,0x38,0x05,0xec,0xd5,0x8d,0x5e,0xcc,0xdd,0xff,
0x97,0x4d,0xd5,0xe4,0x58,0x0d,0xd5,0x45,0x05,0xa0,0x20,0xd5,0x01,0x61,0x80,0xd0,0x31,0x59,0xdd,0x80,0xa8,0x5e,0xdd,0x58,0x05,0xec,0xcd,0xd5,0xff,
0x88,0xdd,0xe5,0x8d,0x5e,0x58,0x10,0x5e,0x50,0x12,0x1d,0xdd,0x03,0x88,0x54,0x50,0xa6,0x20,0x54,0x50,0x1d,0xd5,0x45,0x85,0xe4,0xdd,0xff,
0xb7,0xdd,0x5e,0x58,0x05,0x0d,0xdd,0x58,0x2d,0x59,0x21,0xd5,0x06,0x0d,0x98,0x54,0x58,0x25,0x09,0x51,0x54,0xd0,0x20,0xaa,0x05,0xc5,0x88,0x80,0xdc,0xdd,0xdd,0x5f,
0x88,0x4d,0xdd,0x5e,0xd8,0x8d,0xd5,0x03,0x03,0x8d,0x03,0x12,0x13,0x0d,0x82,0x62,0x8d,0x03,0x12,0x13,0x0d,0x83,0x03,0x0d,0xd5,0x88,0xd4,0xdd,0xd5,0xff,
0x88,0xdd,0xdd,0xd8,0x05,0x05,0x0d,0x50,0xa8,0x0d,0x89,0x12,0x0d,0x52,0x16,0x12,0xd5,0x02,0x91,0x8d,0x80,0xa0,0xd5,0x05,0x05,0x80,0xdd,0xdd,0xdf,
0x88,0x4d,0xdd,0x5e,0xd8,0x80,0xd5,0x03,0x02,0x03,0x0d,0x85,0x05,0x8d,0x51,0x06,0x01,0xd5,0x85,0x05,0x8d,0x03,0x02,0x03,0x0d,0x58,0x38,0xd4,0xdd,0xd5,0xff,
0x97,0xdd,0xde,0xd8,0xde,0xd0,0x2d,0xdd,0x58,0x60,0x58,0xd5,0x01,0x03,0x52,0x1d,0xd5,0x03,0x02,0x10,0x5c,0x58,0x88,0x5c,0xdd,0xdd,0xff,
0x67,0xdd,0xdd,0x58,0xdd,0x58,0x0d,0x50,0x1a,0xd5,0x03,0x80,0xd9,0x52,0x0d,0x80,0x6d,0xdd,0xd5,0xff,
0x77,0xdd,0xe5,0x8d,0xdd,0x81,0x0d,0xd8,0x30,0xdd,0x50,0x38,0x05,0x45,0x03,0x26,0x05,0x45,0x8d,0xd4,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0x54,0xd8,0xd5,0x45,0x01,0x0d,0xd5,0x03,0x80,0xd0,0x6b,0x20,0xd8,0x8d,0xd8,0xdd,0xdd,0x5f,
0xc7,0xdd,0xde,0xd8,0xde,0xd0,0x2d,0xdd,0xdd,0x86,0x05,0x85,0x8d,0x50,0x10,0x35,0x21,0x52,0x1d,0xd5,0x03,0x02,0x10,0x21,0x05,0xc5,0x88,0x88,0x05,0xcd,0xdd,0xdd,0x5f,
0xc8,0xd5,0x88,0x80,0xdd,0xdd,0xdd,0xdd,0xd5,0x01,0x01,0x01,0x0d,0x54,0x50,0x12,0x03,0x02,0x10,0x5e,0x45,0x0a,0x23,0xa2,0x05,0xe4,0x50,0x12,0x03,0x02,0x10,0x5e,0xd5,0x01,0x07,0x01,0x0d,0xdd,0xdd,0xdd,0xdd,0x58,0x88,0x0d,0x5f,
0xc8,0x4d,0x58,0x80,0xd5,0xe5,0x0d,0xdd,0xd5,0x0d,0xd0,0x18,0x01,0x0d,0xd5,0x82,0x12,0x12,0x8d,0x45,0x13,0xa0,0xa3,0x15,0xed,0x82,0x12,0x12,0x8d,0xd5,0x01,0x06,0x01,0x0d,0xd0,0xdd,0xdd,0x50,0x54,0xd5,0x88,0x0d,0x5f,
0xc8,0xcd,0xdd,0xd5,0xec,0xd8,0xd8,0x5e,0xdd,0x12,0x01,0x02,0xdd,0x02,0x02,0x85,0x10,0xdd,0x81,0x50,0x60,0x51,0x8d,0xd0,0x15,0x82,0x02,0x0d,0xd2,0x01,0x02,0x1d,0xdc,0x58,0xd8,0xde,0xcd,0xdd,0xd5,0xff,
0x88,0xcc,0x4d,0xdd,0xdd,0x8d,0x58,0x30,0x30,0xd8,0x12,0x12,0x0d,0x80,0x30,0x36,0xd8,0x12,0x12,0x0d,0x58,0x30,0x30,0x54,0xd8,0x58,0x5c,0xdd,0xd5,0xff,
0x98,0x4d,0xdd,0xd5,0x4d,0x88,0xd5,0x4d,0x05,0x21,0x20,0xd5,0x01,0x21,0x05,0x6d,0x80,0x30,0x12,0x0d,0x81,0x21,0x52,0xdd,0x05,0x88,0x05,0x45,0x80,0x58,0x05,0x4d,0xdd,0xd5,0xff,
0xf8,0xc4,0xdd,0x0d,0xde,0xcd,0x8d,0x58,0xdd,0xdd,0x88,0x58,0x05,0x80,0xd0,0x23,0x21,0x23,0x21,0x23,0x28,0xd8,0x10,0x10,0x10,0x10,0x18,0xdd,0x01,0x23,0x21,0x23,0x21,0x0d,0xe4,0xd8,0x50,0x65,0x80,0xde,0xcd,0xd8,0xdd,0x5e,0xcc,0x4d,0xdf,
0x97,0xcd,0xdd,0xd4,0xd0,0x18,0x06,0xd5,0x01,0x21,0x21,0x0d,0x82,0x12,0x30,0xd5,0x02,0x12,0x30,0xde,0xdd,0x80,0x5e,0xc4,0x58,0x05,0xec,0x4d,0xd5,0xff,
0xa7,0xdd,0xd5,0xe5,0x81,0x8d,0xe5,0x06,0x0a,0x0d,0x5e,0xd5,0x29,0x18,0xdd,0x51,0x02,0x0a,0x0d,0xdd,0x52,0x90,0xd0,0xdd,0x10,0x20,0xdd,0xdd,0xdd,0xff,
0x37,0xdd,0x56,0x1d,0x20,0xd8,0xd0,0x2d,0x10,0xd8,0xdd,0x5f,
0x47,0xdd,0xd8,0x1d,0x02,0x0d,0x56,0xdd,0x2d,0x58,0x0d,0x18,0xdd,0xdf,
0x64,0xdd,0xdd,0x10,0x50,0x1d,0x02,0x62,0x0d,0x85,0x8d,0xdd,0xdf,
0x54,0xdd,0xd5,0x18,0x0d,0xa8,0xd6,0x1d,0xdd,0x5f,
0x74,0xdd,0xd5,0xe5,0x71,0x80,0xd5,0x05,0x0a,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0x54,0x4d,0xdd,0x58,0x1d,0x62,0x8d,0x83,0x0d,0xdd,0x5f,
0x74,0xc4,0xdd,0xdd,0x58,0x0d,0x62,0x85,0x0d,0x10,0x28,0x1d,0xdd,0xd5,0xff,
0x74,0xdd,0xdd,0x58,0x15,0x8d,0x82,0x62,0x0d,0x8d,0x01,0xdd,0xdd,0x5f,
0x47,0xdd,0xd1,0x8d,0x02,0x0d,0x56,0xd5,0x12,0x0d,0x80,0xd8,0xdd,0xdf,
0x74,0xdd,0xd5,0xe5,0x85,0x8d,0x50,0x26,0x28,0xd1,0x05,0x81,0xdd,0xdd,0x5f,
0x47,0xdd,0xd8,0x1d,0x02,0x0d,0x56,0xd5,0x12,0x0d,0x80,0xd8,0xdd,0xdf,
0x64,0xdd,0xdd,0x60,0x58,0xd8,0xa0,0xd8,0x10,0x1d,0xdd,0xdf,
0x74,0xdd,0xdd,0x58,0x05,0x8d,0x82,0x62,0x0d,0x81,0x50,0x1d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x05,0x80,0xd8,0x51,0x8d,0x85,0x02,0x0d,0x50,0x20,0xd5,0x45,0x80,0x5e,0x45,0x18,0x5e,0x4d,0xd5,0xff,
0x47,0x4d,0xdd,0x60,0xd0,0x20,0xd8,0x0d,0x58,0x54,0x52,0x15,0x45,0x01,0x54,0xdd,0xff,
0x47,0xdd,0xd6,0x8d,0x80,0xd0,0x20,0xd1,0x2d,0x51,0x05,0xe5,0x85,0xed,0xdf,
0x67,0xdd,0xdd,0x88,0x1d,0x88,0x2d,0x85,0x8d,0xd5,0x0d,0xc5,0x62,0x05,0xc5,0x18,0x5c,0xdd,0x5f,
0x46,0xdd,0xd6,0x8d,0x02,0x0d,0x50,0x15,0x45,0x20,0x54,0x50,0x15,0x4d,0xdf,
0x47,0xdd,0xd6,0x8d,0x80,0xd0,0x20,0xd2,0x0d,0x51,0x01,0xd8,0x0d,0xdd,0xff,
0x74,0xdd,0xdd,0x57,0x18,0x8d,0x02,0x02,0x8d,0xd5,0x8d,0xc4,0xdd,0xff,
0x74,0xdd,0xdd,0x50,0x15,0x68,0xd8,0x02,0x8d,0x83,0x80,0xdd,0xdd,0x5f,
0x46,0xdd,0xd7,0x8d,0x83,0xd0,0x20,0xd5,0x85,0x45,0x85,0x4d,0xdf,
0x77,0xdd,0x5e,0x58,0x05,0xe5,0x80,0x5e,0x58,0xdd,0xd5,0x21,0x56,0x0d,0x88,0x20,0xd8,0x05,0x01,0xdd,0xdd,0x5f,
0x46,0xdd,0xe5,0x85,0xe5,0x10,0xd5,0x02,0x6d,0x02,0x0d,0x10,0xdd,0xdf,
0x76,0xdd,0xd5,0xe5,0x60,0x59,0x5e,0x58,0x80,0x5e,0x50,0x20,0x20,0xd5,0x80,0x58,0xdd,0xd8,0x5c,0xcd,0xdf,
0x77,0xdd,0xdd,0x56,0x05,0x18,0xd8,0x88,0xd8,0x51,0x8d,0x8d,0x8d,0x0a,0x80,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x77,0xcc,0xdd,0xcc,0x58,0xdd,0xd0,0x1d,0x68,0x52,0x0d,0x88,0x02,0xd8,0x80,0x1d,0x58,0x58,0x54,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x56,0x01,0x5e,0x58,0x05,0xed,0x21,0xdd,0x58,0x58,0x0d,0x82,0x80,0xd8,0x0d,0xdd,0xd5,0xff,
0x46,0xdd,0xe5,0x95,0xe5,0x02,0xd5,0x02,0x6d,0x02,0x0d,0x50,0x15,0x4d,0xdf,
0x77,0xdd,0xdd,0x56,0x01,0x58,0xd8,0x02,0x01,0xd8,0x05,0x8d,0xd5,0x02,0x05,0xc4,0x58,0x05,0xc4,0x58,0x05,0xc4,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x82,0x02,0x0d,0x80,0xdd,0x58,0x59,0x5e,0x58,0x80,0x5e,0x58,0x80,0x5e,0xdd,0xd5,0xff,
0x77,0xcd,0xd5,0xec,0x56,0x85,0xec,0x58,0x05,0xed,0x58,0x2d,0x59,0x50,0x20,0xd8,0x88,0xd8,0x88,0xdd,0xdd,0x5f,
0x77,0x4d,0xd5,0xed,0x68,0x5e,0x50,0x28,0x5e,0x58,0x20,0xde,0xd5,0x80,0xdc,0x58,0x85,0xc5,0x89,0x5c,0xdd,0xdf,
0x77,0xdd,0xd5,0xe5,0x01,0x81,0x5e,0x50,0x58,0x05,0xe5,0x88,0xde,0x58,0x02,0x6d,0x58,0x50,0x20,0xdd,0x58,0x05,0xc4,0xdd,0x5f,
0x74,0xdd,0xe5,0x60,0xdd,0xd8,0x20,0x20,0xd8,0x98,0xdd,0xdd,0x5f,
0x77,0xdd,0xe5,0x60,0xdd,0xd8,0x05,0x10,0xd8,0x05,0x8d,0x85,0x8d,0x58,0xa0,0x5e,0x58,0x81,0x5e,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x56,0x85,0xe5,0x80,0x5e,0x50,0x20,0xdd,0x53,0x05,0x18,0xd8,0x88,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x85,0x8d,0x02,0x05,0x8d,0x80,0x58,0xd0,0x25,0x18,0xd8,0x88,0xd8,0x51,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x85,0x9d,0x88,0x8d,0x58,0x02,0x0d,0x80,0xdd,0x58,0x82,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x01,0x01,0x0d,0x88,0x50,0xdd,0x58,0x0d,0x82,0x80,0xd0,0x52,0x05,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0x76,0x4d,0xdd,0xe4,0x56,0x90,0x5e,0xd0,0x58,0xd5,0x85,0x80,0xd0,0xa8,0x0d,0x58,0x80,0x54,0xdd,0xd5,0xff,
0x67,0x4d,0xde,0xd6,0x15,0xe5,0x02,0x05,0xe5,0x02,0x0d,0xd0,0x25,0x8d,0x18,0x01,0xd5,0x8d,0x54,0xdd,0xff,
0x74,0x4d,0xdd,0xd5,0x82,0x61,0xd8,0x20,0x21,0xd1,0x8d,0xdd,0xd5,0xff,
0x47,0x4d,0xdd,0x61,0xd1,0x8d,0x02,0x0d,0x02,0xd5,0x85,0xe5,0x85,0xed,0xdf,
0x74,0x4d,0xdd,0xd5,0x78,0x8d,0x8a,0x8d,0x18,0x58,0xdd,0xdd,0x5f,
0x77,0xcd,0xdd,0xc5,0x68,0x05,0xc5,0x88,0x5c,0x59,0x0d,0xdd,0x02,0x0d,0x80,0x28,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xd5,0x78,0x8d,0x8a,0x8d,0x80,0x58,0xd5,0x0d,0x8d,0x80,0x58,0xd8,0x15,0x8d,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xe4,0x56,0x09,0x5e,0x45,0x28,0x05,0xe4,0x58,0xdd,0xd2,0x88,0xd8,0x88,0xd8,0x0d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x05,0x01,0x0d,0x88,0x8d,0x85,0x01,0x0d,0x02,0x05,0x0d,0x50,0x28,0x05,0xe5,0x80,0xd5,0xed,0xd5,0xff,
0x47,0xdd,0xe5,0x70,0xd5,0x80,0xd0,0x21,0xd5,0x20,0xd8,0x0d,0x80,0xdd,0xdf,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x88,0x8d,0x80,0x51,0xd5,0x02,0x50,0x15,0xe5,0x02,0x80,0x5e,0xd8,0xd5,0xe4,0xdd,0xff,
0x77,0xdd,0xd5,0xe5,0x88,0x0d,0x58,0x82,0x6d,0x02,0x05,0x8d,0x85,0x80,0xd8,0x58,0x0d,0xd5,0x10,0x15,0xc4,0xdd,0x5f,
0x77,0xcc,0xdd,0xc4,0xd6,0x0d,0xd5,0x18,0xd8,0x88,0xd0,0x20,0x58,0xd0,0x52,0x18,0xd8,0x88,0xdd,0xdd,0x5f,
0x67,0xdd,0x5e,0x58,0x15,0xe5,0x12,0x05,0xe5,0x80,0xdd,0x20,0x56,0x0d,0x80,0x21,0xd5,0x8d,0x54,0xdd,0xff,
0x47,0x4d,0xdd,0x60,0xd0,0x20,0xd1,0x21,0xd5,0x21,0xd8,0x0d,0x80,0xdd,0xdf,
0x47,0xdd,0xd1,0x01,0xd8,0x1d,0x02,0x0d,0x52,0x05,0x45,0x62,0x54,0x58,0x54,0xdd,0xff,
0x47,0xdd,0xd1,0x01,0xd8,0x1d,0x02,0x0d,0x5a,0x54,0x56,0x05,0x45,0x85,0x4d,0xdf,
0x47,0xdd,0xe5,0x60,0x5e,0x58,0x5e,0x5a,0xd5,0x80,0xd1,0x21,0xd1,0x8d,0xdd,0xff,
0x77,0xdd,0xd5,0xe5,0x60,0x58,0xd5,0x88,0x8d,0x85,0x09,0xd8,0x82,0x0d,0x82,0xdd,0x58,0x05,0xed,0xd5,0xff,
0x47,0xdd,0xd6,0x8d,0x02,0x1d,0x02,0xd5,0x02,0x0d,0x18,0xd5,0x01,0x54,0xdd,0xff,
0x77,0xdd,0xdd,0x57,0x80,0x9d,0x0a,0x25,0x0d,0x50,0x58,0x0d,0x8d,0xdd,0x85,0xe5,0x85,0xed,0xdf,
0x77,0xdd,0x5e,0x57,0x8d,0xd5,0x01,0x01,0x8d,0x82,0x02,0x0d,0x50,0x2d,0xd4,0x58,0x5e,0x45,0x85,0xe4,0xdd,0xff,
0x77,0xc4,0xdd,0x54,0xd5,0x80,0x54,0x56,0x02,0x8d,0x58,0x02,0xd5,0x01,0x58,0x5e,0x58,0x80,0x5e,0xd1,0x0d,0x5e,0x4d,0xdf,
0x77,0xdd,0xde,0x56,0x80,0x5e,0x50,0x52,0x05,0xe5,0x02,0x8d,0xd8,0x58,0x0d,0x81,0x01,0x0d,0x85,0x80,0xdd,0xdd,0x5f,
0x67,0xdd,0x5e,0x51,0x01,0x5e,0x51,0x85,0xe5,0x02,0x0d,0xd0,0x25,0x60,0xd8,0x02,0x0d,0x8d,0xdd,0xdf,
0x77,0xdd,0xdd,0x57,0x05,0x80,0xd0,0x20,0x28,0xd1,0x05,0x8d,0x50,0x20,0xd5,0xe5,0x81,0x5e,0x58,0xde,0xdd,0xff,
0x77,0xdd,0x5e,0x56,0x8d,0x5e,0x50,0x28,0x05,0xe5,0x02,0xd0,0xd5,0x85,0x18,0xd8,0x88,0xd8,0x51,0x0d,0xdd,0xd5,0xff,
0x67,0xdd,0xdd,0x88,0x1d,0x8a,0x0d,0x85,0x01,0xd5,0x26,0xdd,0x18,0x5e,0x58,0x05,0xed,0xd5,0xff,
0x74,0xdd,0xdd,0x56,0x80,0x9d,0x0a,0x28,0xd8,0x58,0x1d,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xd5,0x85,0x8d,0x82,0x62,0x0d,0x10,0xd2,0x0d,0x88,0x8d,0x80,0x18,0xd1,0x05,0x80,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x58,0x88,0xd8,0x85,0x1d,0x52,0x88,0xd6,0x0d,0x01,0xd0,0x20,0x58,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x05,0x81,0xd8,0x85,0x1d,0x88,0x8d,0x02,0x58,0x0d,0x30,0x28,0x0d,0x80,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x50,0x15,0x68,0xd0,0x15,0xa0,0xd8,0x8d,0xd8,0x80,0x5e,0x50,0x58,0x05,0xe5,0x80,0xd5,0xed,0xd5,0xff,
0x77,0xdd,0xd5,0xe5,0x68,0x8d,0x58,0x88,0xd8,0x05,0x8d,0xdd,0x0d,0x50,0x20,0x28,0xd8,0x01,0x01,0xdd,0xdd,0x5f,
0x76,0xc4,0xdd,0x5c,0x45,0x10,0x1d,0xd5,0x02,0x0d,0x68,0x58,0xd0,0x20,0x28,0xd1,0x05,0x8d,0xdd,0xd5,0xff,
0x76,0xdd,0xdd,0x56,0x18,0x10,0xd0,0x58,0x50,0xd8,0x88,0xd0,0x20,0x28,0xdd,0x51,0x20,0x5c,0x4d,0xd5,0xff,
0x77,0x4d,0xdd,0xed,0x88,0xd5,0x62,0x82,0x0d,0x8d,0x8d,0x10,0x15,0x8d,0x80,0x58,0xd5,0x8d,0xd4,0xdd,0xff,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x02,0x02,0x8d,0x50,0x58,0x0d,0x12,0x1d,0xd5,0x80,0x5e,0x58,0x15,0xed,0xd5,0xff,
0x77,0xdd,0xe5,0x60,0x5e,0x58,0x5e,0x50,0x2d,0xdd,0x85,0x18,0xd1,0x20,0x25,0x0d,0x58,0x81,0x54,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x98,0x50,0xd5,0x8a,0x05,0x4d,0x88,0x54,0x51,0x02,0x50,0x54,0x58,0x80,0x54,0xdd,0xd5,0xff,
0x77,0xc4,0xdd,0xdd,0x58,0x0d,0x88,0x8d,0x88,0x0d,0xd9,0x52,0x65,0x45,0x80,0x20,0x54,0xd5,0x8d,0xc4,0xdd,0xff,
0x77,0xdd,0xde,0x56,0x80,0x5e,0x50,0x5a,0x5e,0x58,0x20,0xdd,0x01,0x50,0x9d,0x88,0x8d,0x88,0x8d,0xdd,0xd5,0xff,
0x67,0xcd,0xde,0xd5,0x60,0xd5,0x80,0x20,0xd0,0xd8,0xd0,0x15,0x20,0xd8,0x82,0xd0,0x18,0x1d,0xdd,0xdf,
0x67,0x4d,0xde,0xd6,0x0d,0xd1,0x01,0x01,0xd8,0x58,0xd5,0x8a,0x54,0x50,0x28,0x54,0xd5,0x85,0xc4,0xdd,0xff,
0x77,0xdd,0xdd,0x57,0x81,0x01,0xd2,0x88,0x0d,0x8d,0x0d,0xd2,0x05,0x05,0xe4,0x58,0x20,0x5e,0x45,0x8d,0x5e,0x4d,0xdf,
0x77,0xdd,0xdd,0x58,0x57,0x8d,0x85,0x12,0x0d,0x83,0x0d,0xd8,0x02,0x05,0xed,0xd8,0x5e,0xc4,0x58,0x5e,0xc4,0xdd,0xff,
0x77,0x4d,0xde,0x45,0x60,0x5e,0x45,0x85,0xed,0x20,0xdd,0x58,0x51,0x8d,0x88,0xad,0x58,0x10,0x15,0x4d,0xdd,0x5f,
0x77,0xdd,0xd5,0xe5,0x88,0x05,0xe5,0x15,0x80,0x5e,0x58,0x80,0x5e,0x51,0x02,0xdd,0x50,0x56,0x28,0xd0,0x12,0x80,0xdd,0xdd,0x5f,
0x77,0xc4,0xdd,0x54,0xd5,0x80,0x54,0x57,0x20,0x50,0xd5,0x15,0x80,0xd8,0x20,0x10,0xd8,0x2d,0xd5,0x80,0x5e,0xdd,0x5f,
0x77,0x4d,0xdd,0xd5,0x60,0x91,0xd0,0x28,0x8d,0x8d,0x0d,0x58,0x05,0x8d,0x0a,0x80,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x51,0x8d,0xd5,0x10,0x25,0x60,0xd5,0x02,0x80,0xd8,0x03,0x8d,0x80,0x58,0xd5,0x85,0x85,0x4d,0xdd,0x5f,
0x77,0xc4,0xdd,0xe4,0xd5,0x60,0x5e,0x45,0x88,0x5e,0xd1,0x2d,0xd5,0x88,0x8d,0x01,0xa8,0xd0,0x10,0x58,0xdd,0xdd,0x5f,
0x77,0xdd,0x5e,0x56,0x8d,0x5e,0x51,0x01,0x85,0xe5,0x88,0x2d,0x51,0x2d,0x8d,0x02,0x88,0xd5,0x85,0x85,0x4d,0xdd,0x5f,
0x77,0xdd,0x5e,0x58,0x0d,0xd5,0x82,0x68,0xd5,0x28,0x85,0x45,0x85,0x01,0x54,0x52,0x88,0x54,0x58,0x59,0x54,0xdd,0xd5,0xff,
0x77,0xdd,0xe5,0x01,0xdd,0xd8,0x26,0x20,0xd0,0x28,0x8d,0x58,0xdd,0x45,0x89,0x5e,0x4d,0x58,0x5e,0xc4,0xdd,0xff,
0x77,0xc4,0xdd,0xec,0x45,0x60,0x5e,0xc4,0x58,0x5e,0xdd,0x10,0xd5,0x81,0x02,0x0d,0x02,0x02,0x10,0xdd,0xd8,0x5c,0xcd,0xdf,
0x76,0xdd,0xdd,0x58,0x05,0x60,0xd8,0x05,0x8d,0x5a,0x8d,0x45,0x88,0x05,0x4d,0x50,0x95,0xc4,0xdd,0x5f,
0x77,0xdd,0x5e,0x59,0x0d,0x5e,0x58,0x18,0x5e,0xd0,0x28,0xdd,0xda,0x6d,0x88,0x8d,0x88,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xe5,0x8d,0xdd,0x88,0x8d,0x02,0x58,0x0d,0x80,0xdd,0x51,0xa6,0x05,0xed,0x89,0x5e,0x4d,0xdd,0xff,
0x77,0xc4,0xdd,0x54,0xd5,0x80,0x54,0x56,0x20,0x50,0xd5,0xa8,0x0d,0x8d,0x0d,0x51,0x01,0x80,0xd5,0x80,0x10,0x54,0xdd,0xd5,0xff,
0x45,0xdd,0xe5,0x60,0xd5,0x02,0x0d,0x38,0xd8,0x1d,0xdd,0xff,
0x74,0xdd,0xdd,0x51,0x05,0x18,0xd0,0x26,0x28,0xd8,0x58,0x0d,0xdd,0xd5,0xff,
0x47,0xdd,0xd8,0x1d,0x02,0x0d,0x56,0xd5,0x12,0x0d,0x80,0xd8,0x0d,0xdd,0xff,
0x76,0xcc,0xdd,0xcc,0x56,0x05,0xcc,0x58,0xdd,0xd8,0xd8,0x02,0x0d,0x58,0x03,0x15,0xed,0xdd,0x5f,
0x47,0xdd,0xd7,0x8d,0x15,0x0d,0x02,0x0d,0x80,0xd0,0x20,0xd5,0x85,0x4d,0xdf,
0x47,0xdd,0xd7,0x8d,0x15,0x0d,0x80,0xd0,0x20,0xd0,0x20,0xd5,0x85,0x4d,0xdf,
0x64,0xdd,0xdd,0x01,0x81,0xd8,0xa0,0xdd,0x60,0xdc,0xdd,0xff,
0x46,0x4d,0xd4,0x56,0x15,0x45,0x20,0xd5,0x01,0xd0,0x20,0xd8,0x0d,0xdd,0xff,
0x46,0xdd,0xe5,0x85,0xe5,0x8d,0x50,0x26,0xd3,0x8d,0x81,0xdd,0xdf,
0x65,0xdd,0x5e,0x58,0x0d,0xd8,0x26,0x1d,0x05,0x02,0x0d,0x18,0xdd,0xdd,0xff,
0x74,0xdd,0xdd,0x56,0x01,0x01,0x0d,0x8a,0x8d,0x80,0xdd,0xdd,0x5f,
0x74,0xdd,0x5e,0x56,0x8d,0xd5,0x8a,0x8d,0x80,0x90,0xdd,0xdd,0x5f,
0x67,0xcd,0xd5,0xc5,0x60,0x15,0xc5,0x02,0x0d,0xd5,0x0d,0x58,0x50,0xd5,0x82,0x8d,0x88,0x1d,0xdd,0xdf,
0x74,0xdd,0xdd,0x50,0x15,0x68,0xd8,0x02,0x8d,0x83,0x80,0xdd,0xdd,0x5f,
0x47,0xdd,0xd6,0x8d,0x80,0xd0,0x20,0xd5,0x02,0xd1,0x01,0xd8,0x0d,0xdd,0xff,
0x77,0xcd,0xdd,0xc5,0x60,0x10,0x5c,0x58,0x50,0x5c,0x58,0x20,0xdd,0x88,0xd0,0x20,0xdd,0x58,0x15,0xed,0xd5,0xff,
0x57,0x4d,0xde,0x45,0x85,0xe4,0x58,0x5e,0xd8,0x5e,0x56,0x2d,0xd0,0x28,0xd8,0x9d,0xdd,0x5f,
0x77,0xdd,0xdd,0x58,0xd0,0x1d,0x88,0x8d,0x10,0xd2,0x0d,0x50,0xd8,0xd6,0x20,0x58,0xd8,0x0d,0xdd,0xd5,0xff,
0x77,0xc4,0xdd,0x5c,0x45,0x18,0x5c,0x45,0x80,0xdd,0xd0,0xd5,0x68,0x58,0xd8,0x28,0x0d,0x80,0x21,0x0d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x05,0x20,0x20,0xd8,0x80,0xd5,0x18,0xd5,0xe5,0x18,0x85,0xed,0xd8,0x5e,0xc4,0xdd,0xff,
0x47,0xdd,0xe5,0x60,0x5e,0x50,0x25,0xe5,0x10,0x5e,0x51,0x2d,0x58,0x0d,0x80,0xdd,0xdf,
0x67,0xdd,0xe5,0x8d,0xd5,0x02,0x62,0x0d,0x8d,0x1d,0x18,0x8d,0x88,0x0d,0x80,0xdd,0xdd,0xff,
0x77,0xdd,0xdd,0x56,0x05,0x18,0xd8,0x88,0xd8,0x51,0x8d,0x02,0x05,0x8d,0x02,0x88,0xd8,0x80,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x58,0x05,0x01,0xd8,0x02,0x01,0xdd,0xd8,0xd6,0x05,0x02,0xd5,0x88,0x05,0xe5,0x85,0x85,0xed,0xdd,0x5f,
0x47,0xdd,0xe5,0x70,0x5e,0x50,0x25,0xe5,0x20,0x5e,0x58,0xd5,0x02,0x1d,0x81,0xdd,0xdf,
0x47,0x4d,0xd4,0x56,0x15,0x45,0xa5,0x45,0x8d,0x52,0x0d,0x18,0xd1,0x8d,0xdd,0xff,
0x77,0xc4,0xdd,0x5c,0x45,0x80,0x5c,0x45,0x80,0xdd,0x50,0x20,0xd6,0x85,0x8d,0x80,0x20,0x1d,0x81,0x58,0xdd,0xdd,0x5f,
0x77,0xdd,0x5e,0x56,0x85,0xe5,0x80,0x5e,0xd0,0x2d,0xd5,0x02,0x88,0xd0,0x58,0x50,0xd1,0x81,0x8d,0xdd,0xd5,0xff,
0x67,0xc4,0xdd,0xdd,0x8d,0x01,0x81,0xd8,0x80,0xd0,0xd8,0xd0,0x26,0x20,0xdd,0x58,0x5c,0x4d,0xdf,
0x77,0xcd,0xd5,0xec,0x56,0x01,0x5e,0xc5,0x20,0x15,0xed,0x58,0xdd,0x02,0x88,0xd0,0x58,0x50,0xd8,0x88,0xdd,0xdd,0x5f,
0x74,0xdd,0xdd,0x57,0x85,0x8d,0x8a,0x8d,0x51,0x88,0x54,0xdd,0xd5,0xff,
0x67,0xdd,0xdd,0x68,0x8d,0x05,0x28,0xd8,0x28,0xd0,0x15,0x8d,0x88,0x0d,0x51,0x80,0x54,0xdd,0xdf,
0x77,0xc4,0xdd,0xe4,0xd5,0x60,0xd4,0x50,0x98,0xd5,0x0d,0x8d,0x80,0x58,0xd0,0xa8,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x51,0x88,0x0d,0x88,0x8d,0x50,0x58,0x1d,0x62,0x58,0xd5,0x02,0x80,0x5e,0xd8,0xd5,0xe4,0xdd,0xff,
0x76,0x4d,0xdd,0x54,0x56,0x88,0xd5,0x88,0x0d,0x90,0x58,0xd0,0x20,0x28,0xdd,0x58,0xdc,0x4d,0xdf,
0x77,0x4d,0xdd,0xed,0x68,0x05,0xe5,0x02,0x80,0x5e,0x58,0xdd,0xd0,0x20,0x50,0x1d,0x88,0x8d,0x18,0x80,0xdd,0xdd,0x5f,
0x77,0x4d,0xde,0xd6,0x0d,0x5e,0x50,0x28,0x05,0xe5,0x02,0xd1,0x5e,0x58,0x05,0x1d,0x58,0x88,0xd8,0x88,0xdd,0xdd,0x5f,
0x77,0x4d,0xdd,0xd5,0x68,0x8d,0x02,0x88,0xd8,0x58,0x0d,0x8d,0x0d,0x50,0x28,0x8d,0x58,0x10,0x15,0x4d,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x85,0x9d,0x88,0x8d,0x58,0x80,0xd0,0xad,0xd5,0x88,0x05,0xed,0x88,0x5e,0x4d,0xdd,0xff,
0x77,0xc4,0xdd,0x54,0xd5,0x80,0x54,0x56,0x28,0x0d,0x58,0x50,0x1d,0x85,0x12,0x1d,0x85,0x02,0x0d,0x8d,0x8d,0xdd,0xd5,0xff,
0x66,0xdd,0xdd,0x71,0x58,0xd8,0x80,0xd8,0xa0,0xdd,0x8d,0xc5,0x85,0xec,0xdd,0xff,
0x77,0xdd,0x5e,0x58,0x05,0xe5,0x80,0x5e,0x51,0x20,0xdd,0x51,0x05,0x68,0xd8,0x02,0x8d,0x58,0xdd,0x4d,0xdf,
0x77,0xdd,0xd5,0xe5,0x60,0x51,0x0d,0x58,0x88,0xd1,0x25,0x80,0xd5,0x8d,0xd4,0x58,0x20,0x5e,0x45,0x88,0x5e,0x4d,0xdd,0xff,
0x77,0xc4,0xdd,0x54,0xd5,0x80,0x54,0x56,0x20,0x50,0xd5,0x82,0x8d,0x01,0x58,0xd5,0x85,0x85,0xe5,0x01,0x58,0x5e,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x56,0x85,0xe5,0x80,0x5e,0xd2,0x0d,0xd5,0x85,0x80,0xd8,0x02,0x8d,0x50,0x98,0x54,0xdd,0xd5,0xff,
0x77,0xc4,0xdd,0x5c,0x45,0x68,0x5c,0x45,0x02,0x0d,0xd5,0x8d,0x58,0x82,0x5e,0x58,0x80,0x5e,0x59,0x0d,0x5e,0xdd,0x5f,
0x77,0xc4,0xdd,0x54,0xd5,0x70,0x15,0x45,0x88,0x0d,0x5a,0x80,0xd8,0x0d,0xd5,0x05,0x80,0x5e,0x58,0x80,0x5e,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x56,0x01,0xd5,0xe5,0x88,0x05,0xe5,0x10,0xd0,0xdd,0x05,0x02,0x0d,0x80,0x28,0xd8,0x05,0x8d,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xed,0x68,0x05,0xe5,0x88,0x05,0xe5,0x80,0xdd,0x51,0x85,0x8d,0x15,0x20,0x20,0xd8,0x88,0xdd,0xdd,0x5f,
0x77,0xdd,0xd5,0xe5,0x85,0x60,0xd5,0x80,0xa0,0xd8,0x05,0x8d,0x80,0x50,0xd5,0x05,0x18,0x5e,0x58,0x1d,0x5e,0xdd,0x5f,
0x77,0xdd,0xd5,0xe5,0x68,0x8d,0x58,0x88,0xd8,0xd2,0x0d,0x85,0x10,0xd5,0x81,0x20,0x5e,0x58,0x58,0x5e,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x05,0x09,0x0d,0x02,0x05,0x0d,0xd8,0x50,0xd4,0x52,0x88,0x54,0x58,0x80,0x54,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x57,0x80,0x10,0xd8,0x85,0x0d,0x58,0x80,0xd8,0x05,0x8d,0x02,0x02,0x8d,0xd5,0x80,0x5c,0x4d,0xd5,0xff,
0x76,0xdd,0xdd,0x51,0x05,0x60,0x1d,0x02,0x50,0x21,0xd8,0xd8,0xd8,0x82,0x0d,0x8d,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0xd5,0xe5,0x88,0x0d,0x58,0x82,0x6d,0x52,0x05,0x8d,0x85,0x80,0xd8,0x51,0x01,0xd8,0xdd,0xdd,0x5f,
0x77,0xc4,0xdd,0xe4,0xd5,0x60,0xd4,0x58,0x10,0x1d,0x52,0x58,0x0d,0x8d,0x8d,0x82,0x80,0xd8,0x58,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x85,0x8d,0x80,0x58,0xd1,0x0d,0x20,0xd5,0x05,0x02,0x0d,0x88,0x01,0xd8,0x80,0xdd,0xdd,0x5f,
0x74,0xdd,0xdd,0x57,0x18,0x8d,0x8a,0x20,0xd1,0x85,0x8d,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xd5,0x88,0x0d,0x88,0x8d,0x20,0xdd,0xd6,0x28,0x8d,0x18,0x80,0xd8,0x51,0x0d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x02,0x85,0x1d,0x02,0x58,0x1d,0x8d,0x8d,0x88,0x8d,0x88,0x0d,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x58,0x89,0xd8,0xa8,0xd5,0x05,0x81,0xd6,0x2d,0xdd,0x85,0xe5,0x85,0xed,0xdf,
0x77,0xdd,0xd5,0xe5,0x85,0x8d,0x51,0x82,0x8d,0x10,0xd8,0xd5,0x26,0x58,0x54,0x58,0x58,0x54,0x58,0x58,0x54,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xd5,0x85,0x60,0xd8,0x02,0x8d,0x85,0x80,0xd1,0x01,0xdd,0x50,0x20,0x5e,0xd8,0x5e,0x4d,0xdf,
0x77,0xdd,0xdd,0x59,0x88,0xd8,0xa8,0xd1,0x85,0x0d,0xdd,0x62,0x05,0xc4,0x58,0x05,0xc4,0x58,0xdc,0x4d,0xdf,
0x77,0xdd,0xdd,0x58,0x50,0x30,0xd8,0x28,0x0d,0x88,0x8d,0xdd,0x0d,0xc4,0x56,0x20,0x5c,0x45,0x09,0x5c,0x4d,0xd5,0xff,
0x77,0xdd,0xdd,0x58,0x05,0x60,0xd3,0x80,0x21,0xd8,0x05,0x01,0xd5,0x20,0xdd,0x58,0x05,0xe5,0x80,0x5e,0xdd,0x5f,
0x77,0xc4,0xdd,0xec,0x45,0x60,0x5e,0xdd,0x20,0x5e,0x58,0x8d,0xe5,0x88,0x1d,0x51,0x50,0x28,0xd8,0x03,0x8d,0xdd,0xd5,0xff,
0x76,0xdd,0xdd,0x58,0x15,0x61,0xd0,0x51,0xa0,0xd8,0x02,0x8d,0x58,0xdd,0x45,0x85,0xe4,0xdd,0xff,
0x77,0xdd,0xd5,0xe5,0x01,0x01,0x05,0xe5,0x8a,0x15,0xed,0x52,0x6d,0xe4,0x58,0x0d,0x54,0x58,0x80,0x54,0x58,0x80,0x54,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x51,0x01,0xd5,0xe5,0x88,0x05,0xe5,0x88,0x25,0xed,0x05,0x26,0xd5,0x88,0x20,0xd8,0x01,0x8d,0xdd,0xd5,0xff,
0x77,0xdd,0x5e,0x56,0x8d,0x5e,0x50,0x20,0x20,0x5e,0x58,0x80,0x5e,0x50,0x25,0x8d,0x58,0x81,0x0d,0x50,0x18,0x15,0x4d,0xdd,0x5f,
0x77,0xc4,0xdd,0x5c,0x45,0x60,0x15,0xc4,0x58,0x0d,0xdd,0x20,0xd8,0x88,0xd8,0xa5,0x1d,0xd5,0x81,0x5c,0x4d,0xd5,0xff,
0x77,0xcc,0xdd,0xdd,0x50,0x1d,0x60,0xd2,0x1d,0x02,0xd0,0x1d,0x50,0x28,0x0d,0x88,0x50,0xd8,0x88,0xdd,0xdd,0x5f,
0x76,0x4d,0xdd,0x54,0x50,0x10,0x26,0xd5,0x8a,0x0d,0x8d,0x0d,0x58,0x80,0x5e,0x59,0xdd,0xed,0xdf,
0x77,0x4d,0xdd,0xe4,0x58,0x01,0x5e,0x45,0x02,0x85,0xed,0x8d,0xd5,0x10,0x25,0x60,0xd8,0x82,0x0d,0xdd,0x01,0x5c,0xcd,0xdf,
0x77,0xdd,0x5e,0x57,0x8d,0xd5,0x15,0xa8,0xd1,0x88,0x0d,0x80,0xdd,0x58,0x25,0xed,0x85,0xe4,0xdd,0xff,
0x77,0xdd,0xdd,0x56,0x85,0x8d,0x88,0x8d,0xd2,0x80,0x5c,0x58,0xd5,0xc5,0x20,0x15,0xec,0x58,0x15,0xec,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x82,0x02,0x0d,0x8d,0x0d,0xdd,0x12,0xd4,0x58,0x81,0x54,0x51,0x88,0x54,0xdd,0xd5,0xff,
0x67,0xdd,0xdd,0x71,0x81,0xd8,0x0a,0xdd,0x58,0xd8,0x02,0x0d,0x88,0x0d,0x8d,0xdd,0xdf,
0x77,0xcd,0xdd,0xc5,0x88,0x5c,0x58,0x8d,0xd0,0xad,0x56,0x05,0x02,0x0d,0x88,0x01,0xd8,0x15,0x01,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x85,0x01,0xd8,0x20,0x20,0xd8,0x51,0x03,0xd8,0x05,0x8d,0x88,0x8d,0x85,0x8d,0xdd,0xd5,0xff,
0x67,0xc4,0xdd,0xdd,0x01,0xd8,0x80,0xd2,0x05,0x8d,0x85,0x2d,0x51,0x03,0x65,0xe5,0x8d,0x5e,0xdd,0xff,
0x76,0x4d,0xdd,0x54,0x56,0x98,0xd5,0xa0,0x20,0xd0,0x10,0x58,0xd0,0x50,0x58,0xd8,0x0d,0xdd,0xd5,0xff,
0x67,0xdd,0xdd,0x70,0x58,0xd8,0x81,0xd1,0x05,0x20,0xd0,0x50,0x20,0xd8,0x02,0x0d,0xd5,0x85,0xc4,0xdd,0xff,
0x77,0xdd,0xdd,0x51,0x20,0x56,0x0d,0x80,0x28,0xd8,0x58,0x0d,0x10,0xdd,0xd0,0x28,0x8d,0x10,0x58,0x0d,0xdd,0xd5,0xff,
0x76,0xc4,0xdd,0x54,0xd5,0x68,0x54,0x50,0xa8,0xd5,0x88,0x0d,0x18,0x52,0xd5,0x18,0x10,0x5e,0xdd,0xd5,0xff,
0x77,0xdd,0xdd,0x56,0x12,0x80,0xd8,0x02,0x8d,0x50,0xd2,0x0d,0x01,0x58,0x0d,0x01,0x58,0x0d,0xd5,0x80,0x5c,0x4d,0xd5,0xff,
0x77,0xdd,0x5e,0x56,0x85,0xe5,0x80,0xdd,0x58,0x02,0x8d,0x50,0x28,0x0d,0x10,0x2d,0xd5,0x90,0x5e,0xdd,0x5f,
0x77,0xc4,0xdd,0x5c,0x45,0x68,0x5c,0x45,0x09,0xdd,0x50,0x1d,0x58,0x02,0x0d,0x50,0x20,0x28,0xd8,0x58,0x0d,0xdd,0xd5,0xff,
0x66,0xdd,0xdd,0x62,0x01,0x0d,0x0a,0x8d,0xd8,0x05,0xc5,0x05,0x15,0xc5,0x81,0x5c,0xdd,0x5f,
0x76,0xc4,0xdd,0x5c,0x45,0x78,0xdd,0x50,0x10,0xd8,0xa2,0x0d,0x88,0x1d,0xdd,0x85,0xec,0x4d,0xdf,
0x77,0x4d,0xde,0x45,0x60,0x5e,0x45,0x20,0x5e,0x45,0x01,0xdd,0xd2,0x01,0x8d,0x01,0x28,0x0d,0x80,0xdd,0xdd,0x5f,
0x77,0x4d,0xde,0xd8,0x5e,0x50,0x21,0x5e,0x51,0x01,0xdd,0x58,0x56,0x8d,0x02,0x02,0x8d,0x58,0x80,0x54,0xdd,0xd5,0xff,
0x76,0xdd,0xd5,0xe5,0x68,0x85,0xe5,0x10,0x15,0x25,0xe5,0x85,0x8d,0x50,0x28,0x8d,0x50,0x38,0x05,0x4d,0xdd,0x5f,
0x77,0x4d,0xdd,0xd5,0x85,0x01,0xd6,0x28,0x8d,0x02,0xd8,0xd5,0x01,0x52,0xd4,0x58,0x80,0x54,0x50,0x18,0x05,0x4d,0xdd,0x5f,
0x77,0xdd,0x5e,0x58,0x0d,0x5e,0x58,0x26,0x05,0xe5,0x80,0x51,0xdd,0x25,0x81,0xd8,0x88,0xd0,0x28,0x1d,0xdd,0xd5,0xff,
0x77,0xc4,0xdd,0x54,0xd5,0x68,0x54,0x58,0x28,0xd5,0x82,0x8d,0x10,0x2d,0xd5,0x18,0x5e,0x51,0x0d,0xed,0xdf,
0x77,0xdd,0xdd,0x56,0x0d,0x8d,0x02,0x01,0x8d,0x10,0x51,0x8d,0x52,0x05,0x0d,0x58,0x28,0x5e,0x58,0x0d,0x5e,0xdd,0x5f,
0x77,0xdd,0xd5,0xe5,0x98,0x0d,0x58,0x28,0x0d,0x51,0x05,0x8d,0xd5,0x62,0xd5,0x88,0x20,0xd8,0x88,0xdd,0xdd,0x5f,
0x76,0xdd,0xdd,0x56,0x05,0x91,0xd8,0xa8,0xd0,0x28,0x0d,0x58,0xdd,0xe5,0x85,0xed,0xdf,
0x54,0xdd,0xd5,0x60,0x30,0xd0,0x28,0xd5,0x81,0x54,0xdd,0x5f,
0x74,0xdd,0xdd,0x58,0xd8,0xd0,0x26,0x28,0xd1,0x05,0x18,0xdd,0xdd,0x5f,
0x74,0xdd,0xd5,0xe5,0x71,0x80,0xd5,0x05,0x20,0x20,0xd8,0x88,0xdd,0xdd,0x5f,
0x74,0xdd,0xdd,0x56,0x88,0x0d,0x0a,0x05,0x0d,0x58,0x09,0x54,0xdd,0xd5,0xff,
0x46,0x4d,0xd4,0x58,0xd5,0x01,0xd6,0x20,0xd0,0x20,0xd5,0x01,0x54,0xdd,0xff,
0x46,0xdd,0xe5,0x70,0x5e,0x50,0x25,0xe5,0x10,0xd5,0x02,0x0d,0x80,0xdd,0xdf,
0x46,0xdd,0xd6,0x8d,0x02,0x0d,0x8d,0x51,0x25,0xe5,0x10,0x5e,0xdd,0xff,
0x46,0x4d,0xd4,0x58,0xd5,0x8d,0x62,0x0d,0x83,0xd1,0x8d,0xdd,0xff,
0x47,0xdd,0xd6,0x8d,0x80,0xd0,0x20,0xd5,0x21,0x54,0x50,0x15,0x45,0x85,0x4d,0xdf,
0x47,0xdd,0xd8,0x0d,0x18,0xd5,0x03,0xd6,0x20,0xd8,0x0d,0x80,0xdd,0xdf,
0x74,0xdd,0xdd,0x56,0x82,0x10,0xd8,0x28,0x0d,0x80,0x51,0x0d,0xdd,0xd5,0xff,
0x76,0xc4,0xdd,0x5c,0x45,0x68,0xdd,0x58,0x0d,0x80,0x50,0x1d,0x80,0xa0,0xdd,0xd0,0x15,0xcc,0xdd,0xff,
0x77,0xdd,0x5e,0x56,0x85,0xe5,0x80,0x5e,0x50,0x2d,0xdd,0x02,0x05,0x01,0xd8,0x88,0xd1,0x85,0x8d,0xdd,0xd5,0xff,
0x48,0xdd,0xd8,0x0d,0x80,0xd1,0x21,0xd5,0x6d,0x50,0x2d,0x58,0x0d,0x80,0xdd,0xdf,
0x75,0xdd,0xdd,0x56,0x01,0x01,0x0d,0x88,0x50,0xd5,0x02,0x02,0x05,0x4d,0x58,0x05,0xc4,0xdd,0x5f,
0x47,0x4d,0xd4,0x56,0x15,0x45,0xa5,0x45,0x8d,0x52,0x0d,0x18,0xd1,0x8d,0xdd,0xff,
0x77,0xdd,0xdd,0x56,0x10,0x18,0xd0,0x58,0x8d,0x80,0xdd,0x50,0x20,0x5e,0x50,0x20,0x5e,0x58,0xde,0xdd,0xff,
0x77,0xdd,0xdd,0x50,0x15,0x68,0xd0,0x15,0x02,0x0d,0x8d,0x0d,0xd8,0x80,0x54,0x50,0x28,0x05,0x4d,0x58,0x05,0xc4,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x05,0x85,0x0d,0x88,0x8d,0xdd,0x8d,0x02,0x02,0x8d,0x89,0x8d,0xdd,0xd5,0xff,
0x76,0xdd,0xdd,0x56,0x01,0x58,0xd8,0x15,0x8d,0x85,0x80,0xd8,0x0a,0x0d,0x88,0x8d,0xdd,0xd5,0xff,
0x76,0x4d,0xdd,0xd5,0x68,0x8d,0x01,0x02,0x50,0xd8,0x88,0xd5,0x15,0x02,0x05,0x45,0x88,0x05,0x4d,0xdd,0x5f,
0x77,0xdd,0xdd,0x57,0x15,0x80,0xd8,0x88,0xd0,0x28,0x0d,0xdd,0x28,0x5c,0x45,0x80,0x5c,0x45,0x80,0x5c,0x4d,0xd5,0xff,
0x74,0x4d,0xdd,0xd5,0x78,0x8d,0x8a,0x8d,0x18,0x58,0xdd,0xdd,0x5f,
0x77,0x4d,0xdd,0xd5,0x61,0x80,0xd0,0x28,0x8d,0x85,0x8d,0x58,0xd8,0xd0,0x28,0x8d,0x85,0x18,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x56,0x88,0x0d,0x80,0x25,0x0d,0x58,0x80,0xd8,0x05,0x2d,0x51,0x88,0x5e,0x51,0x8d,0x5e,0xdd,0x5f,
0x66,0xdd,0xdd,0x68,0x01,0xd0,0xa8,0xd5,0x10,0xd5,0x45,0x88,0x54,0xd5,0x85,0xc4,0xdd,0xff,
0x76,0xdd,0xd5,0xe5,0x89,0x0d,0x58,0x20,0x26,0xd8,0x05,0x8d,0xdd,0x85,0xcc,0x58,0x5c,0xcd,0xdf,
0x47,0xdd,0xd6,0x8d,0x80,0xd5,0x21,0xd1,0x21,0xd0,0x20,0xd5,0x85,0x4d,0xdf,
0x77,0xdd,0xdd,0x56,0x05,0x09,0xd8,0x88,0xd0,0x20,0x50,0xd5,0x8d,0x8d,0x02,0x05,0x8d,0x80,0x58,0xdd,0xdd,0x5f,
0x77,0xdd,0x5e,0x56,0x85,0xe5,0x81,0xdd,0x58,0x88,0xd8,0x5a,0x0d,0x81,0x05,0x0d,0x85,0x80,0xdd,0xdd,0x5f,
0x48,0xdd,0xe5,0x10,0x5e,0x58,0xd5,0x02,0x6d,0x02,0x0d,0x02,0xd5,0x10,0x5e,0x51,0x05,0xed,0xdf,
0x77,0x4d,0xde,0x45,0x8d,0x5e,0x45,0x89,0x5e,0xda,0x85,0xe5,0x68,0xdd,0x58,0x88,0xd8,0x88,0xdd,0xdd,0x5f,
0x77,0xc4,0xdd,0x5c,0x45,0x78,0x5c,0x45,0x18,0x54,0xd5,0x02,0x0d,0x58,0x1d,0xd0,0xa0,0x5e,0x58,0x85,0xed,0xdd,0xff,
0x76,0xdd,0xe5,0x85,0xe5,0x01,0xdd,0xd5,0x82,0x8d,0x62,0x85,0x0d,0x82,0x09,0xdd,0xdd,0x5f,
0x77,0xdd,0xdd,0x58,0x98,0xd0,0xa8,0x0d,0x50,0x15,0x85,0x4d,0x56,0x2d,0x45,0x88,0x5e,0x45,0x8d,0x5e,0x4d,0xdf,
0x77,0xdd,0x5e,0x56,0x8d,0xd5,0x80,0x51,0x0d,0x02,0x05,0x10,0xd5,0x28,0x0d,0x45,0x88,0x5e,0x45,0x8d,0x5e,0x4d,0xdf,
0x77,0xdd,0xdd,0x58,0x88,0xd8,0x88,0xdd,0xd2,0x0d,0x60,0x15,0x8d,0x82,0x81,0xd8,0xd8,0xdd,0xdd,0x5f,
0x77,0xdd,0xd5,0xe5,0x68,0x85,0xe5,0x80,0x10,0x5e,0xd2,0x51,0x0d,0x58,0xd8,0xd8,0x28,0x0d,0x85,0x8d,0xdd,0xd5,0xff,
0x77,0xcc,0xdd,0x4d,0xd6,0x05,0x45,0x80,0x20,0xd5,0x05,0x02,0x0d,0x8d,0x8d,0x88,0x8d,0x89,0x0d,0xdd,0xd5,0xff,
0x77,0x4d,0xdd,0xd5,0x68,0x01,0xd8,0x88,0xd0,0x15,0x80,0xd8,0x80,0xd5,0x05,0xa0,0x5e,0x58,0x0d,0x5e,0xdd,0x5f,
0x66,0xcd,0xd5,0xc5,0x81,0x5c,0x58,0x1d,0xd2,0x0d,0x56,0x0a,0x5e,0x51,0x80,0x5e,0xdd,0xdf,
};



// Game variables
uint16_t sokoban_level; // index of current level
uint8_t sokoban_level_done; // info, if current level has been done

char* sokoban_level_data_pointer; // pointer to start of this level in program memory
char* sokoban_level_data_pointer_next; // pointer to start of next level in program memory

uint16_t sokoban_moves; // number of moves that sokoban did (not displayed)
uint16_t sokoban_pushes; // number of pushes that sokoban did (not displayed)
uint16_t sokoban_moves_level; // number of moves that sokoban did since start of level
uint16_t sokoban_pushes_level; // number of pushes that sokoban did since start of level

// undo push ringbuffer
typedef struct { // structure describing one step back in push history
  uint8_t pos; // position where player was before push
  int8_t offset; // offset in vram (level data) where were pushed
} sokoban_undo_ringbuffer_type;
sokoban_undo_ringbuffer_type sokoban_undo_ringbuffer[SOKOBAN_UNDO_RINGBUFFER_SIZE]; // array of structures (ringbuffer)
uint16_t sokoban_undo_ringbuffer_pos; // current position (index) in ringbuffer
uint16_t sokoban_undo_ringbuffer_count; // count of entries in ringbuffer

// Sounds
PROGMEM uint16_t trackPush[] = {0x0015,0x102,0x0000};
PROGMEM uint16_t trackCantMove[] = {0x0015,0x104,0x102,0x0000};
PROGMEM uint16_t trackCongrat[] = {0x0015,0x102,0x104,0x108,0x10A,0x10C,0x10E,0x120,0x130,0x140,0x150,0x0000};

/**
 * Plays sound
 */
void TriggerFx(uint8_t sound_id, uint8_t volume, uint8_t param3) {
  switch (sound_id) {
    case SOKOBAN_SOUND_MOVE:
    case SOKOBAN_SOUND_PUSH:
      // no sound
    break;
    case SOKOBAN_SOUND_KEY:
      gb.sound.playPattern(trackPush, 0);
    break;
    case SOKOBAN_SOUND_CANT_MOVE:
      gb.sound.playPattern(trackCantMove, 0);
    break;
    case SOKOBAN_SOUND_CONGRAT:
      gb.sound.playPattern(trackCongrat, 0);
    break;
  }
}

// emulating TVText functions
uint8_t text_pos_x1, text_pos_y1, text_pos_x2, text_pos_y2, text_pos_x, text_pos_y; // text positioning (window parameters and cursor position)
uint8_t vram[SCREEN_TILES_H * SCREEN_TILES_V];

/**
 * Draws emulated TVText's screen on Gamebuino's
 */
void text_draw_screen() {
  gb.display.clear();
  for (uint8_t x = 0; x < SCREEN_TILES_H; x++) {
    for (uint8_t y = 0; y < SCREEN_TILES_V; y++) {
      gb.display.drawBitmap(x*5, y*5, sokoban_tiles[vram[x + y * SCREEN_TILES_H]]);
    }
  }
}

/**
 * Sets window position
 * @param uint8_t x1 left margin of window
 * @param uint8_t y1 top margin of window
 * @param uint8_t x2 right margin of window
 * @param uint8_t y2 bottom margin of window
 */
void text_set_window(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2) {
  text_pos_x1 = x1;
  text_pos_y1 = y1;
  text_pos_x2 = x2;
  text_pos_y2 = y2;
  text_pos_x = x1;
  text_pos_y = y1;
}

/**
 * Puts a character into vram (screen)
 * @param uint8_t c character to print
 */
void text_putc(uint8_t c) {
  vram[text_pos_x + text_pos_y * SCREEN_TILES_H] = c;
  text_pos_x++;
  if (text_pos_x > text_pos_x2) {
    text_pos_x = text_pos_x1;
    text_pos_y++;
    if (text_pos_y > text_pos_y2) {
      text_pos_y = text_pos_y1;
    }
  }
}

/**
 * Advances text cursor to beginning of next line. At the bottom wraps to the top.
 */
void text_next_line() {
  text_pos_x = text_pos_x1;
  text_pos_y++;
  if (text_pos_y > text_pos_y2) {
    text_pos_y = text_pos_y1;
  }
}

/**
 * Writes information into EEPROM, that given level has been done.
 * @param uint16_t level index of level to mark as done
 */
void eeprom_set_level_done(uint16_t level) {
  uint8_t byte_id = 3 + (level / 8);
  uint8_t bit_id = level % 8;

  uint8_t value = EEPROM.read(byte_id);
  value |= (1 << bit_id);
  EEPROM.write(byte_id, value);
}

/**
 * Reads from EEPROM if given level has been done.
 * @param uint16_t level index of level, which we want to know, if has been done
 * @return int8_t true if level has been done, otherwise false
 */
uint8_t eeprom_is_level_done(uint16_t level) {
  uint8_t byte_id = 3 + (level / 8);
  uint8_t bit_id = level % 8;
  if (EEPROM.read(byte_id) & (1 << bit_id)) {
    return 1;
  }
  return 0;
}

/**
 * Saves into EEPROM last played level.
 * @param uint16_t level index of level to save
 */
void eeprom_set_last_level(uint16_t level) {
  EEPROM.write(1, level & 0xFF);
  EEPROM.write(2, level >> 8);
}

/**
 * Reads from EEPROM last played level
 * @return uint16_t index of level last played
 */
uint16_t eeprom_get_last_level() {
  uint16_t last_level = EEPROM.read(1) | EEPROM.read(2) << 8;
  if (last_level < SOKOBAN_LEVELS_COUNT) {
    return last_level;
  }
  return 0;
}

void eeprom_init() {
  if (EEPROM.read(0) != 51) {
    EEPROM.write(0, 51);
    for (uint8_t i = 1; i < 3 + (SOKOBAN_LEVELS_COUNT / 8 + 1); i++) {
      EEPROM.write(i, 0);
    }
  }
}



/**
 * Loads and draws level data (field and info) on screen
 */
void sokoban_load_level() {
  char* reading_pos; // position of "reading head" in level data (program memory)
  char token, token1, token2; // read token, and his first and second nibble
  uint8_t level_width, level_height; // dimensions of level

  // clear level statistics
  sokoban_moves_level = 0;
  sokoban_pushes_level = 0;

  // clear undo push
  sokoban_undo_ringbuffer_pos = 0;
  sokoban_undo_ringbuffer_count = 0;

  // set position of head to start of level data
  reading_pos = sokoban_level_data_pointer;

  // clear display
  for (uint8_t i = 0; i < 16*12; i++) {
    vram[i] = FONT_SOKOBAN_SKY;
  }

  // read dimensions and set viewport
  token = pgm_read_byte(reading_pos);
  reading_pos++;
  level_width = ((token & 0b11110000) >> 4) + 1;
  level_height = (token & 0b00001111) + 1;

  // centering
  text_set_window(
    (SOKOBAN_FIELD_LEFT + SOKOBAN_FIELD_RIGHT - level_width) / 2 ,
    (SOKOBAN_FIELD_TOP + SOKOBAN_FIELD_BOTTOM - level_height) / 2,
    (SOKOBAN_FIELD_LEFT + SOKOBAN_FIELD_RIGHT - level_width) / 2 + level_width - 1,
    (SOKOBAN_FIELD_TOP + SOKOBAN_FIELD_BOTTOM - level_height) / 2 + level_height - 1
  );

  // read level data and write to screen (compression algorithm is described in sokoban_levels.h)
  do {
    token = pgm_read_byte(reading_pos);
    token1 = ((token & 0b11110000) >> 4);
    token2 = (token & 0b00001111);

    if (token1 < 0xe) {
      text_putc(FONT_SOKOBAN_FLOOR + (token1 & 0b00000111));
      if (token1 > 0x7) {
        text_putc(FONT_SOKOBAN_FLOOR + (token1 & 0b00000111));
      }
    } else {
      text_next_line();
    }
    if (token2 < 0xe) {
      text_putc(FONT_SOKOBAN_FLOOR + (token2 & 0b00000111));
      if (token2 > 0x7) {
        text_putc(FONT_SOKOBAN_FLOOR + (token2 & 0b00000111));
      }
    } else {
      text_next_line();
    }

    reading_pos++;
  } while ((token1 != 0b00001111) && (token2 != 0b00001111));

  // change skies to floors in game area
  for (uint8_t i = text_pos_x1; i <= text_pos_x2; i++) {
    for (uint8_t j = text_pos_y1; j <= text_pos_y2; j++) {
      if (vram[i + j * SCREEN_TILES_H] == FONT_SOKOBAN_SKY) {
        vram[i + j * SCREEN_TILES_H] = FONT_SOKOBAN_FLOOR;
      }
    }
  }

  // get level completion status
  sokoban_level_done = eeprom_is_level_done(sokoban_level);

  // set pointer to next level
  sokoban_level_data_pointer_next = reading_pos;
}

/**
 * Restarts whole game (clears counters and starts at first level)
 */
void sokoban_restart_game() {
  sokoban_level = 0;
  sokoban_level_data_pointer = (char*)sokoban_levels;
  sokoban_moves = 0;
  sokoban_pushes = 0;
  level_select_pos = 0;
}

/**
 * Advances to the next level
 */
void sokoban_advance_level() {
  sokoban_level++;
  sokoban_level_data_pointer = sokoban_level_data_pointer_next;

  if (sokoban_level >= SOKOBAN_LEVELS_COUNT) {
    sokoban_restart_game();
  }
}

/**
 * Skips all levels from the beginning to level before current
 */
void sokoban_skip_to_previous_level() {
  uint16_t to_level;
  if (sokoban_level > 0) {
    to_level = (sokoban_level - 1);
  } else {
    to_level = SOKOBAN_LEVELS_COUNT - 1;
  }
  sokoban_restart_game();
  while (sokoban_level < to_level) {
    sokoban_load_level();
    sokoban_advance_level();
  }
  sokoban_load_level();
}

/**
 * Returns pointer to char with player
 * @return char* pointer on tile in tvtext_buffer, where sokoban is
 */
inline unsigned char* sokoban_find_player() {
  unsigned char* a;

  // iterate through tvtext_buffer and search for sokoban or sokoban on target
  for (a = vram; a < vram + SCREEN_TILES_H * SCREEN_TILES_V; a++) {
    if ((*a == FONT_SOKOBAN_PLAYER) || (*a == FONT_SOKOBAN_PLAYER_TARGET)) {
      return a;
    }
  }

  return NULL;
}

/**
 * Returns if level is cleared
 * @return uint8_t 1 if level is cleared (done), 0 otherwise
 */
inline uint8_t sokoban_is_level_cleared() {
  unsigned char* a;

  // iterate through tvtext buffer and return 0 if block, which is not on target is found
  for (a = vram; a < vram + SCREEN_TILES_H * SCREEN_TILES_V; a++) {
    if (*a == FONT_SOKOBAN_BLOCK) {
      return 0;
    }
  }

  return 1;
}

/**
 * Gives game into state where was before last push
 */
void sokoban_undo_last_push() {
  if (sokoban_undo_ringbuffer_count > 0) { // only if there are entries in ringbuffer
    unsigned char* a; // pointer to tile where sokoban was before push
    unsigned char* b; // pointer to tile where box was before push
    unsigned char* c; // pointer to tile where box is now
    unsigned char* d; // pointer to tile where sokoban is now

    // moving back in ringbuffer
    if (sokoban_undo_ringbuffer_pos > 0) {
      sokoban_undo_ringbuffer_pos--;
    } else {
      sokoban_undo_ringbuffer_pos = SOKOBAN_UNDO_RINGBUFFER_SIZE - 1;
    }
    sokoban_undo_ringbuffer_count--;

    // undoing move in vram (level data)
    a = vram + sokoban_undo_ringbuffer[sokoban_undo_ringbuffer_pos].pos;
    b = a + sokoban_undo_ringbuffer[sokoban_undo_ringbuffer_pos].offset;
    c = b + sokoban_undo_ringbuffer[sokoban_undo_ringbuffer_pos].offset;
    d = sokoban_find_player();

    (*d) -= 6;
    (*a) += 6;
    (*c) -= 2;
    (*b) += 2;

    sokoban_moves_level++;
    sokoban_moves++;
    sokoban_pushes_level--;
    sokoban_pushes--;
  } else {
    // if can't get back in ringbuffer, just restart level
    sokoban_load_level();
  }
}

/**
 * Screen to change level
 */
void sokoban_level_select() {
  gb.display.clear();
  
        gb.display.cursorX = 0;
        gb.display.cursorY = 10;
  gb.display.print(F("Select level:"));
  
        gb.display.cursorX = 60 - (level_select_pos * 4);
        gb.display.cursorY = 6;
  gb.display.write(30);
        gb.display.cursorX = 60 - (level_select_pos * 4);
        gb.display.cursorY = 14;
  gb.display.write(31);

        gb.display.cursorX = 60;
        gb.display.cursorY = 10;
  gb.display.write('0' + (((sokoban_level + 1)) % 10));
        gb.display.cursorX = 60-4;
        gb.display.cursorY = 10;
  gb.display.write('0' + (((sokoban_level + 1) / 10) % 10));
        gb.display.cursorX = 60-8;
        gb.display.cursorY = 10;
  gb.display.write('0' + (((sokoban_level + 1) / 100) % 10));
  
        gb.display.cursorX = 0;
        gb.display.cursorY = 25;
  if (eeprom_is_level_done(sokoban_level)) {
    gb.display.print(F("Finished"));
  } else {
    gb.display.print(F("Not finished"));
  }

  if (gb.buttons.repeat(BTN_LEFT, 5)) {
    level_select_pos++;
    TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
    if (level_select_pos > 2) {
      level_select_pos = 2;
      TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
    }
  }
  
  if (gb.buttons.repeat(BTN_RIGHT, 5)) {
    level_select_pos--;
    TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
    if (level_select_pos < 0) {
      level_select_pos = 0;
      TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
    }
  }
  
  if (gb.buttons.repeat(BTN_DOWN, 5)) {
    switch (level_select_pos) {
      case 0:
        if (sokoban_level >= 1) {
          sokoban_level--;
          TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
        } else {
          sokoban_level = 0;
          TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
        }
        break;
      case 1:
        if (sokoban_level >= 10) {
          sokoban_level -= 10;
          TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
        } else {
          sokoban_level = 0;
          TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
        }
        break;
      case 2:
        if (sokoban_level >= 100) {
          sokoban_level -= 100;
          TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
        } else {
          sokoban_level = 0;
          TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
        }
        break;
    }
  }
  
  if (gb.buttons.repeat(BTN_UP, 5)) {
    switch (level_select_pos) {
      case 0:
        sokoban_level++;
        TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
        break;
      case 1:
        sokoban_level += 10;
        TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
        break;
      case 2:
        sokoban_level += 100;
        TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
        break;
    }
    if (sokoban_level >= SOKOBAN_LEVELS_COUNT) {
      sokoban_level = SOKOBAN_LEVELS_COUNT - 1;
      TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
    }
  }
  
  if (gb.buttons.pressed(BTN_A) || gb.buttons.pressed(BTN_B)) {
    TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
    // load that level
    uint16_t level_to_load = sokoban_level;
    sokoban_restart_game();
    for (uint16_t i = 0; i < level_to_load; i++) {
      sokoban_load_level();
      sokoban_advance_level();
    }
    sokoban_load_level();
    eeprom_set_last_level(sokoban_level);
    
    current_gui_state = GUI_STATE_GAME;
  }
}

/**
 * Process sokoban's move
 */
inline void sokoban_move() {
  unsigned char* a; // pointer to tile that sokoban stands on
  unsigned char* b; // pointer to tile where sokoban goes to
  unsigned char* c; // pointer to tile where sokoban pushes box
  int8_t offset;// pointer offset to next tile (direction of sokoban's move)

  // get offset according to sokoban's direction
  if (gb.buttons.pressed(BTN_LEFT)) {
    offset = SOKOBAN_OFFSET_LEFT;
  }
  if (gb.buttons.pressed(BTN_RIGHT)) {
    offset = SOKOBAN_OFFSET_RIGHT;
  }
  if (gb.buttons.pressed(BTN_UP)) {
    offset = SOKOBAN_OFFSET_UP;
  }
  if (gb.buttons.pressed(BTN_DOWN)) {
    offset = SOKOBAN_OFFSET_DOWN;
  }

  // button A undoes last push
  if (gb.buttons.pressed(BTN_A)) {
    if (sokoban_moves_level == 0) {
      TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
    } else {
      TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
    }
    sokoban_undo_last_push();
  }

  // button B restarts level
  if (gb.buttons.pressed(BTN_B)) {
    if (sokoban_moves_level == 0) {
      TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
    } else {
      TriggerFx(SOKOBAN_SOUND_KEY, 0xff, false);
    }
    sokoban_load_level();
  }

  // button C shows level selection screen
  if (gb.buttons.pressed(BTN_C)) {
    current_gui_state = GUI_STATE_LEVELS;
  }

  // return if no move should be processed
  if (!gb.buttons.pressed(BTN_LEFT) && !gb.buttons.pressed(BTN_RIGHT) && !gb.buttons.pressed(BTN_UP) && !gb.buttons.pressed(BTN_DOWN)) {
    return;
  }

  // search for sokoban and next 2 tiles in his way
  a = sokoban_find_player();
  b = a + offset;
  c = b + offset;

  // if sokoban can move that way...
  if (
    ((*b >= FONT_SOKOBAN_FLOOR) && (*c >= FONT_SOKOBAN_FLOOR))
    &&
      (
        (*b <= FONT_SOKOBAN_TARGET)
        ||
        ((*b <= FONT_SOKOBAN_BLOCK_TARGET) && (*c <= FONT_SOKOBAN_TARGET))
      )
    ) {
    // ... move him ...
    sokoban_moves++;
    sokoban_moves_level++;
    (*a) -= 6;
    // ... and if must push the block ...
    if (*b >= FONT_SOKOBAN_BLOCK) {
      TriggerFx(SOKOBAN_SOUND_PUSH, 0xff, false);

      // ... record for undo ...
      sokoban_undo_ringbuffer[sokoban_undo_ringbuffer_pos].pos = a - vram;
      sokoban_undo_ringbuffer[sokoban_undo_ringbuffer_pos].offset = offset;
      if (sokoban_undo_ringbuffer_count < SOKOBAN_UNDO_RINGBUFFER_SIZE) {
        sokoban_undo_ringbuffer_count++;
      }
      sokoban_undo_ringbuffer_pos = (sokoban_undo_ringbuffer_pos + 1) % SOKOBAN_UNDO_RINGBUFFER_SIZE;

      // ... and push it
      sokoban_pushes++;
      sokoban_pushes_level++;
      (*b) -= 2;
      (*c) += 2;
    } else {
      TriggerFx(SOKOBAN_SOUND_MOVE, 0xff, false);
    }
    (*b) += 6;
  } else {
    TriggerFx(SOKOBAN_SOUND_CANT_MOVE, 0xff, false);
  }
}

/**
 * Print number formatted in base of 10 (with leading zeroes - fixed length)
 * @param uint8_t x X coordinate of text
 * @param uint8_t y Y coordinate of text
 * @param uint16_t number number to print
 * @param uint8_t digits number of digits to print
 */
void text_print_number(uint8_t x, uint8_t y, uint16_t number, uint8_t digits) {
  for (uint8_t i = digits; i > 0; i--) {
    uint16_t mul = 1;
    for (uint8_t j = 1; j < i; j++) {
      mul *= 10;
    }
    gb.display.cursorX = x + 4 * (digits - i);
    gb.display.cursorY = y;
    gb.display.write('0' + ((number / mul) % 10));
  }
}

void show_intro() {
  gb.display.clear();
  gb.display.cursorX = 0;
  gb.display.cursorY = 0;
  gb.display.print(F("Sokobuino"));
  gb.display.drawFastHLine(0, 5, 84);
  gb.display.cursorX = 0;
  gb.display.cursorY = 7;
  gb.display.println(F("Programming:"));
  gb.display.cursorX = 10;
  gb.display.cursorY++; //add some extra vertical spacing
  gb.display.println(F("Martin Sustek"));
  gb.display.cursorY++;
  gb.display.println(F("Level design:"));
  gb.display.cursorX = 10;
  gb.display.cursorY++;
  gb.display.println(F("David W. Skinner"));
  gb.display.cursorX = 10;
  gb.display.cursorY++;
  gb.display.println(F("Joshua Taylor"));
  gb.display.cursorX = 10;
  gb.display.cursorY++;
  gb.display.println(F("Ian Parberry"));
  
  if (gb.buttons.pressed(BTN_A) || gb.buttons.pressed(BTN_B)) {
    current_gui_state = GUI_STATE_GAME;
  }
}


void sokoban_show_congratulations() {
  gb.display.clear();
  
  gb.display.cursorX = 5;
  gb.display.cursorY = 10;
  gb.display.print(F("Congratulations!"));
  gb.display.drawFastHLine(0, 18, 84);
  gb.display.cursorX = 0;
  gb.display.cursorY = 20;
  gb.display.print(F("You've finished level"));
  gb.display.cursorX = 0;
  gb.display.cursorY = 27;
  gb.display.print(F("    by        moves"));
  gb.display.cursorX = 0;
  gb.display.cursorY = 34;
  gb.display.print(F("and       pushes."));
  
  text_print_number(0 * 4, 27, sokoban_level + 1, 3);
  text_print_number(7 * 4, 27, sokoban_moves_level, 6);
  text_print_number(4 * 4, 34, sokoban_pushes_level, 5);
  
  
  if (gb.buttons.pressed(BTN_A) || gb.buttons.pressed(BTN_B)) {
    current_gui_state = GUI_STATE_GAME;
    
    sokoban_advance_level();
    sokoban_load_level();
    eeprom_set_last_level(sokoban_level);
  }
}

void sokoban_congratulations() {
  TriggerFx(SOKOBAN_SOUND_CONGRAT, 0xff, false);
  
  current_gui_state = GUI_STATE_CONGRATS;
}


// the setup routine runs once when Gamebuino starts up
void setup() {
  // initialize the Gamebuino object
  gb.begin();
  gb.titleScreen(F("Sokobuino"));
  
  // start new game
  eeprom_init();
  sokoban_restart_game();

  // load that level
  uint16_t last_level = eeprom_get_last_level();
  for (uint16_t i = 0; i < last_level; i++) {
    sokoban_load_level();
    sokoban_advance_level();
  }
  sokoban_load_level();
}

int free_ram() {
  extern int __heap_start, *__brkval; 
  int v; 
  return (int) &v - (__brkval == 0 ? (int) &__heap_start : (int) __brkval); 
}

void display_free_ram() {
  text_print_number(0, 42, free_ram(), 4);
}


// the loop routine runs over and over again forever
void loop() {
  //updates the gamebuino (the display, the sound, the auto backlight... everything)
  //returns true when it's time to render a new frame (20 times/second)
  if (gb.update()) {
    if (current_gui_state == GUI_STATE_INTRO) {
      show_intro();
    } else if (current_gui_state == GUI_STATE_GAME) {
      sokoban_move();
      text_draw_screen();
      //display_free_ram();
      
      // if this move finishes level, skip to next level
      if (sokoban_is_level_cleared()) {
        sokoban_level_done = 1;
        eeprom_set_level_done(sokoban_level);
  
        sokoban_congratulations();
      }
      
    } else if (current_gui_state == GUI_STATE_LEVELS) {
      sokoban_level_select();
    } else if (current_gui_state == GUI_STATE_CONGRATS) {
      sokoban_show_congratulations();
    }
  }
}

